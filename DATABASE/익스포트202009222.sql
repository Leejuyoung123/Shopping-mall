--------------------------------------------------------
--  파일이 생성됨 - 화요일-9월-22-2020   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Sequence BNO_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "XE"."BNO_SEQ"  MINVALUE 1 MAXVALUE 10000 INCREMENT BY 1 START WITH 121 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DEMO_CUST_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "XE"."DEMO_CUST_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DEMO_ORDER_ITEMS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "XE"."DEMO_ORDER_ITEMS_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 61 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DEMO_ORD_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "XE"."DEMO_ORD_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 11 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DEMO_PROD_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "XE"."DEMO_PROD_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DEMO_USERS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "XE"."DEMO_USERS_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence RNO_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "XE"."RNO_SEQ"  MINVALUE 1 MAXVALUE 10000 INCREMENT BY 1 START WITH 22 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_BNO
--------------------------------------------------------

   CREATE SEQUENCE  "XE"."SEQ_BNO"  MINVALUE 1 MAXVALUE 10000 INCREMENT BY 1 START WITH 161 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_RNO
--------------------------------------------------------

   CREATE SEQUENCE  "XE"."SEQ_RNO"  MINVALUE 1 MAXVALUE 10000 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Table APEX$_ACL
--------------------------------------------------------

  CREATE TABLE "XE"."APEX$_ACL" 
   (	"ID" NUMBER, 
	"WS_APP_ID" NUMBER, 
	"USERNAME" VARCHAR2(255 BYTE), 
	"PRIV" VARCHAR2(1 BYTE), 
	"CREATED_ON" DATE, 
	"CREATED_BY" VARCHAR2(255 BYTE), 
	"UPDATED_ON" DATE, 
	"UPDATED_BY" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table APEX$_WS_FILES
--------------------------------------------------------

  CREATE TABLE "XE"."APEX$_WS_FILES" 
   (	"ID" NUMBER, 
	"WS_APP_ID" NUMBER, 
	"DATA_GRID_ID" NUMBER, 
	"ROW_ID" NUMBER, 
	"WEBPAGE_ID" NUMBER, 
	"COMPONENT_LEVEL" VARCHAR2(30 BYTE), 
	"NAME" VARCHAR2(255 BYTE), 
	"IMAGE_ALIAS" VARCHAR2(255 BYTE), 
	"IMAGE_ATTRIBUTES" VARCHAR2(255 BYTE), 
	"CONTENT" BLOB, 
	"CONTENT_LAST_UPDATE" DATE, 
	"MIME_TYPE" VARCHAR2(255 BYTE), 
	"CONTENT_CHARSET" VARCHAR2(255 BYTE), 
	"CONTENT_FILENAME" VARCHAR2(500 BYTE), 
	"DESCRIPTION" VARCHAR2(4000 BYTE), 
	"CREATED_ON" DATE, 
	"CREATED_BY" VARCHAR2(255 BYTE), 
	"UPDATED_ON" DATE, 
	"UPDATED_BY" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
 LOB ("CONTENT") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table APEX$_WS_HISTORY
--------------------------------------------------------

  CREATE TABLE "XE"."APEX$_WS_HISTORY" 
   (	"ROW_ID" NUMBER, 
	"WS_APP_ID" NUMBER, 
	"DATA_GRID_ID" NUMBER, 
	"COLUMN_NAME" VARCHAR2(255 BYTE), 
	"OLD_VALUE" VARCHAR2(4000 BYTE), 
	"NEW_VALUE" VARCHAR2(4000 BYTE), 
	"APPLICATION_USER_ID" VARCHAR2(255 BYTE), 
	"CHANGE_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table APEX$_WS_LINKS
--------------------------------------------------------

  CREATE TABLE "XE"."APEX$_WS_LINKS" 
   (	"ID" NUMBER, 
	"WS_APP_ID" NUMBER, 
	"DATA_GRID_ID" NUMBER, 
	"ROW_ID" NUMBER, 
	"WEBPAGE_ID" NUMBER, 
	"COMPONENT_LEVEL" VARCHAR2(30 BYTE), 
	"TAGS" VARCHAR2(4000 BYTE), 
	"SHOW_ON_HOMEPAGE" VARCHAR2(1 BYTE), 
	"LINK_NAME" VARCHAR2(255 BYTE), 
	"URL" VARCHAR2(4000 BYTE), 
	"LINK_DESCRIPTION" VARCHAR2(4000 BYTE), 
	"DISPLAY_SEQUENCE" NUMBER, 
	"CREATED_ON" DATE, 
	"CREATED_BY" VARCHAR2(255 BYTE), 
	"UPDATED_ON" DATE, 
	"UPDATED_BY" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table APEX$_WS_NOTES
--------------------------------------------------------

  CREATE TABLE "XE"."APEX$_WS_NOTES" 
   (	"ID" NUMBER, 
	"WS_APP_ID" NUMBER, 
	"DATA_GRID_ID" NUMBER, 
	"ROW_ID" NUMBER, 
	"WEBPAGE_ID" NUMBER, 
	"COMPONENT_LEVEL" VARCHAR2(30 BYTE), 
	"CONTENT" CLOB, 
	"CREATED_ON" DATE, 
	"CREATED_BY" VARCHAR2(255 BYTE), 
	"UPDATED_ON" DATE, 
	"UPDATED_BY" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
 LOB ("CONTENT") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table APEX$_WS_ROWS
--------------------------------------------------------

  CREATE TABLE "XE"."APEX$_WS_ROWS" 
   (	"ID" NUMBER, 
	"WS_APP_ID" NUMBER, 
	"DATA_GRID_ID" NUMBER, 
	"UNIQUE_VALUE" VARCHAR2(255 BYTE), 
	"TAGS" VARCHAR2(4000 BYTE), 
	"PARENT_ROW_ID" NUMBER, 
	"OWNER" VARCHAR2(255 BYTE), 
	"GEOCODE" VARCHAR2(512 BYTE), 
	"LOAD_ORDER" NUMBER, 
	"CHANGE_COUNT" NUMBER, 
	"CREATED_ON" DATE, 
	"CREATED_BY" VARCHAR2(255 BYTE), 
	"UPDATED_ON" DATE, 
	"UPDATED_BY" VARCHAR2(255 BYTE), 
	"C001" VARCHAR2(4000 BYTE), 
	"C002" VARCHAR2(4000 BYTE), 
	"C003" VARCHAR2(4000 BYTE), 
	"C004" VARCHAR2(4000 BYTE), 
	"C005" VARCHAR2(4000 BYTE), 
	"C006" VARCHAR2(4000 BYTE), 
	"C007" VARCHAR2(4000 BYTE), 
	"C008" VARCHAR2(4000 BYTE), 
	"C009" VARCHAR2(4000 BYTE), 
	"C010" VARCHAR2(4000 BYTE), 
	"C011" VARCHAR2(4000 BYTE), 
	"C012" VARCHAR2(4000 BYTE), 
	"C013" VARCHAR2(4000 BYTE), 
	"C014" VARCHAR2(4000 BYTE), 
	"C015" VARCHAR2(4000 BYTE), 
	"C016" VARCHAR2(4000 BYTE), 
	"C017" VARCHAR2(4000 BYTE), 
	"C018" VARCHAR2(4000 BYTE), 
	"C019" VARCHAR2(4000 BYTE), 
	"C020" VARCHAR2(4000 BYTE), 
	"C021" VARCHAR2(4000 BYTE), 
	"C022" VARCHAR2(4000 BYTE), 
	"C023" VARCHAR2(4000 BYTE), 
	"C024" VARCHAR2(4000 BYTE), 
	"C025" VARCHAR2(4000 BYTE), 
	"C026" VARCHAR2(4000 BYTE), 
	"C027" VARCHAR2(4000 BYTE), 
	"C028" VARCHAR2(4000 BYTE), 
	"C029" VARCHAR2(4000 BYTE), 
	"C030" VARCHAR2(4000 BYTE), 
	"C031" VARCHAR2(4000 BYTE), 
	"C032" VARCHAR2(4000 BYTE), 
	"C033" VARCHAR2(4000 BYTE), 
	"C034" VARCHAR2(4000 BYTE), 
	"C035" VARCHAR2(4000 BYTE), 
	"C036" VARCHAR2(4000 BYTE), 
	"C037" VARCHAR2(4000 BYTE), 
	"C038" VARCHAR2(4000 BYTE), 
	"C039" VARCHAR2(4000 BYTE), 
	"C040" VARCHAR2(4000 BYTE), 
	"C041" VARCHAR2(4000 BYTE), 
	"C042" VARCHAR2(4000 BYTE), 
	"C043" VARCHAR2(4000 BYTE), 
	"C044" VARCHAR2(4000 BYTE), 
	"C045" VARCHAR2(4000 BYTE), 
	"C046" VARCHAR2(4000 BYTE), 
	"C047" VARCHAR2(4000 BYTE), 
	"C048" VARCHAR2(4000 BYTE), 
	"C049" VARCHAR2(4000 BYTE), 
	"C050" VARCHAR2(4000 BYTE), 
	"N001" NUMBER, 
	"N002" NUMBER, 
	"N003" NUMBER, 
	"N004" NUMBER, 
	"N005" NUMBER, 
	"N006" NUMBER, 
	"N007" NUMBER, 
	"N008" NUMBER, 
	"N009" NUMBER, 
	"N010" NUMBER, 
	"N011" NUMBER, 
	"N012" NUMBER, 
	"N013" NUMBER, 
	"N014" NUMBER, 
	"N015" NUMBER, 
	"N016" NUMBER, 
	"N017" NUMBER, 
	"N018" NUMBER, 
	"N019" NUMBER, 
	"N020" NUMBER, 
	"N021" NUMBER, 
	"N022" NUMBER, 
	"N023" NUMBER, 
	"N024" NUMBER, 
	"N025" NUMBER, 
	"N026" NUMBER, 
	"N027" NUMBER, 
	"N028" NUMBER, 
	"N029" NUMBER, 
	"N030" NUMBER, 
	"N031" NUMBER, 
	"N032" NUMBER, 
	"N033" NUMBER, 
	"N034" NUMBER, 
	"N035" NUMBER, 
	"N036" NUMBER, 
	"N037" NUMBER, 
	"N038" NUMBER, 
	"N039" NUMBER, 
	"N040" NUMBER, 
	"N041" NUMBER, 
	"N042" NUMBER, 
	"N043" NUMBER, 
	"N044" NUMBER, 
	"N045" NUMBER, 
	"N046" NUMBER, 
	"N047" NUMBER, 
	"N048" NUMBER, 
	"N049" NUMBER, 
	"N050" NUMBER, 
	"D001" DATE, 
	"D002" DATE, 
	"D003" DATE, 
	"D004" DATE, 
	"D005" DATE, 
	"D006" DATE, 
	"D007" DATE, 
	"D008" DATE, 
	"D009" DATE, 
	"D010" DATE, 
	"D011" DATE, 
	"D012" DATE, 
	"D013" DATE, 
	"D014" DATE, 
	"D015" DATE, 
	"D016" DATE, 
	"D017" DATE, 
	"D018" DATE, 
	"D019" DATE, 
	"D020" DATE, 
	"D021" DATE, 
	"D022" DATE, 
	"D023" DATE, 
	"D024" DATE, 
	"D025" DATE, 
	"D026" DATE, 
	"D027" DATE, 
	"D028" DATE, 
	"D029" DATE, 
	"D030" DATE, 
	"D031" DATE, 
	"D032" DATE, 
	"D033" DATE, 
	"D034" DATE, 
	"D035" DATE, 
	"D036" DATE, 
	"D037" DATE, 
	"D038" DATE, 
	"D039" DATE, 
	"D040" DATE, 
	"D041" DATE, 
	"D042" DATE, 
	"D043" DATE, 
	"D044" DATE, 
	"D045" DATE, 
	"D046" DATE, 
	"D047" DATE, 
	"D048" DATE, 
	"D049" DATE, 
	"D050" DATE, 
	"CLOB001" CLOB, 
	"SEARCH_CLOB" CLOB
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
 LOB ("CLOB001") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("SEARCH_CLOB") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table APEX$_WS_TAGS
--------------------------------------------------------

  CREATE TABLE "XE"."APEX$_WS_TAGS" 
   (	"ID" NUMBER, 
	"WS_APP_ID" NUMBER, 
	"DATA_GRID_ID" NUMBER, 
	"ROW_ID" NUMBER, 
	"WEBPAGE_ID" NUMBER, 
	"COMPONENT_LEVEL" VARCHAR2(30 BYTE), 
	"TAG" VARCHAR2(4000 BYTE), 
	"CREATED_ON" DATE, 
	"CREATED_BY" VARCHAR2(255 BYTE), 
	"UPDATED_ON" DATE, 
	"UPDATED_BY" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table APEX$_WS_WEBPG_SECTIONS
--------------------------------------------------------

  CREATE TABLE "XE"."APEX$_WS_WEBPG_SECTIONS" 
   (	"ID" NUMBER, 
	"WS_APP_ID" NUMBER, 
	"WEBPAGE_ID" NUMBER, 
	"DISPLAY_SEQUENCE" NUMBER, 
	"SECTION_TYPE" VARCHAR2(30 BYTE), 
	"TITLE" VARCHAR2(4000 BYTE), 
	"CONTENT" CLOB, 
	"CONTENT_UPPER" CLOB, 
	"NAV_START_WEBPAGE_ID" NUMBER, 
	"NAV_MAX_LEVEL" NUMBER, 
	"NAV_INCLUDE_LINK" VARCHAR2(1 BYTE), 
	"DATA_GRID_ID" NUMBER, 
	"REPORT_ID" NUMBER, 
	"DATA_SECTION_STYLE" NUMBER, 
	"CHART_TYPE" VARCHAR2(255 BYTE), 
	"CHART_3D" VARCHAR2(1 BYTE), 
	"CHART_LABEL" VARCHAR2(255 BYTE), 
	"LABEL_AXIS_TITLE" VARCHAR2(255 BYTE), 
	"CHART_VALUE" VARCHAR2(255 BYTE), 
	"VALUE_AXIS_TITLE" VARCHAR2(255 BYTE), 
	"CHART_AGGREGATE" VARCHAR2(255 BYTE), 
	"CHART_SORTING" VARCHAR2(255 BYTE), 
	"CREATED_ON" DATE, 
	"CREATED_BY" VARCHAR2(255 BYTE), 
	"UPDATED_ON" DATE, 
	"UPDATED_BY" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
 LOB ("CONTENT") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("CONTENT_UPPER") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table APEX$_WS_WEBPG_SECTION_HISTORY
--------------------------------------------------------

  CREATE TABLE "XE"."APEX$_WS_WEBPG_SECTION_HISTORY" 
   (	"SECTION_ID" NUMBER, 
	"WS_APP_ID" NUMBER, 
	"WEBPAGE_ID" NUMBER, 
	"OLD_DISPLAY_SEQUENCE" NUMBER, 
	"NEW_DISPLAY_SEQUENCE" NUMBER, 
	"OLD_TITLE" VARCHAR2(4000 BYTE), 
	"NEW_TITLE" VARCHAR2(4000 BYTE), 
	"OLD_CONTENT" CLOB, 
	"NEW_CONTENT" CLOB, 
	"APPLICATION_USER_ID" VARCHAR2(255 BYTE), 
	"CHANGE_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
 LOB ("OLD_CONTENT") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("NEW_CONTENT") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table DEMO_CUSTOMERS
--------------------------------------------------------

  CREATE TABLE "XE"."DEMO_CUSTOMERS" 
   (	"CUSTOMER_ID" NUMBER, 
	"CUST_FIRST_NAME" VARCHAR2(20 BYTE), 
	"CUST_LAST_NAME" VARCHAR2(20 BYTE), 
	"CUST_STREET_ADDRESS1" VARCHAR2(60 BYTE), 
	"CUST_STREET_ADDRESS2" VARCHAR2(60 BYTE), 
	"CUST_CITY" VARCHAR2(30 BYTE), 
	"CUST_STATE" VARCHAR2(2 BYTE), 
	"CUST_POSTAL_CODE" VARCHAR2(10 BYTE), 
	"PHONE_NUMBER1" VARCHAR2(25 BYTE), 
	"PHONE_NUMBER2" VARCHAR2(25 BYTE), 
	"CREDIT_LIMIT" NUMBER(9,2), 
	"CUST_EMAIL" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table DEMO_ORDERS
--------------------------------------------------------

  CREATE TABLE "XE"."DEMO_ORDERS" 
   (	"ORDER_ID" NUMBER, 
	"CUSTOMER_ID" NUMBER, 
	"ORDER_TOTAL" NUMBER(8,2), 
	"ORDER_TIMESTAMP" DATE, 
	"USER_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table DEMO_ORDER_ITEMS
--------------------------------------------------------

  CREATE TABLE "XE"."DEMO_ORDER_ITEMS" 
   (	"ORDER_ITEM_ID" NUMBER(3,0), 
	"ORDER_ID" NUMBER, 
	"PRODUCT_ID" NUMBER, 
	"UNIT_PRICE" NUMBER(8,2), 
	"QUANTITY" NUMBER(8,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table DEMO_PRODUCT_INFO
--------------------------------------------------------

  CREATE TABLE "XE"."DEMO_PRODUCT_INFO" 
   (	"PRODUCT_ID" NUMBER, 
	"PRODUCT_NAME" VARCHAR2(50 BYTE), 
	"PRODUCT_DESCRIPTION" VARCHAR2(2000 BYTE), 
	"CATEGORY" VARCHAR2(30 BYTE), 
	"PRODUCT_AVAIL" VARCHAR2(1 BYTE), 
	"LIST_PRICE" NUMBER(8,2), 
	"PRODUCT_IMAGE" BLOB, 
	"MIMETYPE" VARCHAR2(255 BYTE), 
	"FILENAME" VARCHAR2(400 BYTE), 
	"IMAGE_LAST_UPDATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
 LOB ("PRODUCT_IMAGE") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table DEMO_STATES
--------------------------------------------------------

  CREATE TABLE "XE"."DEMO_STATES" 
   (	"ST" VARCHAR2(30 BYTE), 
	"STATE_NAME" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table DEMO_USERS
--------------------------------------------------------

  CREATE TABLE "XE"."DEMO_USERS" 
   (	"USER_ID" NUMBER, 
	"USER_NAME" VARCHAR2(100 BYTE), 
	"PASSWORD" VARCHAR2(4000 BYTE), 
	"CREATED_ON" DATE, 
	"QUOTA" NUMBER, 
	"PRODUCTS" CHAR(1 BYTE), 
	"EXPIRES_ON" DATE, 
	"ADMIN_USER" CHAR(1 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table DEPT
--------------------------------------------------------

  CREATE TABLE "XE"."DEPT" 
   (	"DEPTNO" NUMBER(2,0), 
	"DNAME" VARCHAR2(14 BYTE), 
	"LOC" VARCHAR2(13 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table EMP
--------------------------------------------------------

  CREATE TABLE "XE"."EMP" 
   (	"EMPNO" NUMBER(4,0), 
	"ENAME" VARCHAR2(10 BYTE), 
	"JOB" VARCHAR2(9 BYTE), 
	"MGR" NUMBER(4,0), 
	"HIREDATE" DATE, 
	"SAL" NUMBER(7,2), 
	"COMM" NUMBER(7,2), 
	"DEPTNO" NUMBER(2,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table MEMBER
--------------------------------------------------------

  CREATE TABLE "XE"."MEMBER" 
   (	"USERID" VARCHAR2(50 BYTE), 
	"USERPW" VARCHAR2(50 BYTE), 
	"USERNAME" VARCHAR2(50 BYTE), 
	"EMAIL" VARCHAR2(100 BYTE), 
	"REGDATE" DATE DEFAULT SYSDATE, 
	"UPDATEDATE" DATE DEFAULT SYSDATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TBL_ATTACH
--------------------------------------------------------

  CREATE TABLE "XE"."TBL_ATTACH" 
   (	"FULL_NAME" VARCHAR2(150 BYTE), 
	"BNO" NUMBER(11,0), 
	"REGDATE" DATE DEFAULT sysdate
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TBL_BOARD
--------------------------------------------------------

  CREATE TABLE "XE"."TBL_BOARD" 
   (	"BNO" NUMBER(11,0), 
	"TITLE" VARCHAR2(200 BYTE), 
	"CONTENT" CLOB, 
	"WRITER" VARCHAR2(50 BYTE), 
	"REGDATE" TIMESTAMP (6) DEFAULT sysdate, 
	"UPDATE_DATE" DATE DEFAULT sysdate, 
	"VIEW_COUNT" NUMBER(11,0) DEFAULT 0, 
	"REPLY_COUNT" NUMBER(11,0) DEFAULT 0, 
	"BOD_TYPE" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
 LOB ("CONTENT") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;

   COMMENT ON COLUMN "XE"."TBL_BOARD"."BOD_TYPE" IS '게시판 타입';
--------------------------------------------------------
--  DDL for Table TBL_BOARD_TYPE
--------------------------------------------------------

  CREATE TABLE "XE"."TBL_BOARD_TYPE" 
   (	"BOD_TYPE" VARCHAR2(20 BYTE), 
	"BOD_NAME" VARCHAR2(40 BYTE), 
	"BOD_SUN" NUMBER(11,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TBL_MEMBER
--------------------------------------------------------

  CREATE TABLE "XE"."TBL_MEMBER" 
   (	"USER_ID" VARCHAR2(50 BYTE), 
	"USER_PW" VARCHAR2(255 BYTE), 
	"USER_NAME" VARCHAR2(50 BYTE), 
	"EMAIL" VARCHAR2(100 BYTE) DEFAULT NULL, 
	"POINT" NUMBER(11,0) DEFAULT 0, 
	"ENABLED" NUMBER(1,0) DEFAULT 0, 
	"LEVELS" VARCHAR2(50 BYTE) DEFAULT 'ROLE_USER', 
	"REG_DATE" DATE DEFAULT SYSDATE, 
	"UPDATE_DATE" DATE DEFAULT SYSDATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TBL_REPLY
--------------------------------------------------------

  CREATE TABLE "XE"."TBL_REPLY" 
   (	"RNO" NUMBER(11,0), 
	"BNO" NUMBER(11,0) DEFAULT 0, 
	"REPLYTEXT" VARCHAR2(1000 BYTE), 
	"REPLYER" VARCHAR2(50 BYTE), 
	"REGDATE" DATE DEFAULT SYSDATE, 
	"UPDATE_DATE" DATE DEFAULT SYSDATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for View VIEW_REPLY_CNT
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "XE"."VIEW_REPLY_CNT" ("BNO", "TITLE", "REPLYTEXT", "CNT") AS 
  SELECT 
    -- 게시물중 댓글이 존재하는 게시물 리스트 출력
    BOD.BNO, BOD.TITLE, REP.replytext, COUNT(REP.BNO) AS CNT   
FROM 
    TBL_BOARD BOD 
    INNER JOIN TBL_REPLY REP ON BOD.BNO = REP.BNO
GROUP BY BOD.BNO, BOD.TITLE, REP.replytext
ORDER BY BOD.BNO
;
REM INSERTING into XE.APEX$_ACL
SET DEFINE OFF;
REM INSERTING into XE.APEX$_WS_FILES
SET DEFINE OFF;
REM INSERTING into XE.APEX$_WS_HISTORY
SET DEFINE OFF;
REM INSERTING into XE.APEX$_WS_LINKS
SET DEFINE OFF;
REM INSERTING into XE.APEX$_WS_NOTES
SET DEFINE OFF;
REM INSERTING into XE.APEX$_WS_ROWS
SET DEFINE OFF;
REM INSERTING into XE.APEX$_WS_TAGS
SET DEFINE OFF;
REM INSERTING into XE.APEX$_WS_WEBPG_SECTIONS
SET DEFINE OFF;
REM INSERTING into XE.APEX$_WS_WEBPG_SECTION_HISTORY
SET DEFINE OFF;
REM INSERTING into XE.DEMO_CUSTOMERS
SET DEFINE OFF;
Insert into XE.DEMO_CUSTOMERS (CUSTOMER_ID,CUST_FIRST_NAME,CUST_LAST_NAME,CUST_STREET_ADDRESS1,CUST_STREET_ADDRESS2,CUST_CITY,CUST_STATE,CUST_POSTAL_CODE,PHONE_NUMBER1,PHONE_NUMBER2,CREDIT_LIMIT,CUST_EMAIL) values (1,'John','Dulles','45020 Aviation Drive',null,'Sterling','VA','20166','703-555-2143',null,1000,null);
Insert into XE.DEMO_CUSTOMERS (CUSTOMER_ID,CUST_FIRST_NAME,CUST_LAST_NAME,CUST_STREET_ADDRESS1,CUST_STREET_ADDRESS2,CUST_CITY,CUST_STATE,CUST_POSTAL_CODE,PHONE_NUMBER1,PHONE_NUMBER2,CREDIT_LIMIT,CUST_EMAIL) values (2,'William','Hartsfield','6000 North Terminal Parkway',null,'Atlanta','GA','30320','404-555-3285',null,1000,null);
Insert into XE.DEMO_CUSTOMERS (CUSTOMER_ID,CUST_FIRST_NAME,CUST_LAST_NAME,CUST_STREET_ADDRESS1,CUST_STREET_ADDRESS2,CUST_CITY,CUST_STATE,CUST_POSTAL_CODE,PHONE_NUMBER1,PHONE_NUMBER2,CREDIT_LIMIT,CUST_EMAIL) values (3,'Edward','Logan','1 Harborside Drive',null,'East Boston','MA','02128','617-555-3295',null,1000,null);
Insert into XE.DEMO_CUSTOMERS (CUSTOMER_ID,CUST_FIRST_NAME,CUST_LAST_NAME,CUST_STREET_ADDRESS1,CUST_STREET_ADDRESS2,CUST_CITY,CUST_STATE,CUST_POSTAL_CODE,PHONE_NUMBER1,PHONE_NUMBER2,CREDIT_LIMIT,CUST_EMAIL) values (4,'Edward "Butch"','OHare','10000 West OHare',null,'Chicago','IL','60666','773-555-7693',null,1000,null);
Insert into XE.DEMO_CUSTOMERS (CUSTOMER_ID,CUST_FIRST_NAME,CUST_LAST_NAME,CUST_STREET_ADDRESS1,CUST_STREET_ADDRESS2,CUST_CITY,CUST_STATE,CUST_POSTAL_CODE,PHONE_NUMBER1,PHONE_NUMBER2,CREDIT_LIMIT,CUST_EMAIL) values (5,'Fiorello','LaGuardia','Hangar Center','Third Floor','Flushing','NY','11371','212-555-3923',null,1000,null);
Insert into XE.DEMO_CUSTOMERS (CUSTOMER_ID,CUST_FIRST_NAME,CUST_LAST_NAME,CUST_STREET_ADDRESS1,CUST_STREET_ADDRESS2,CUST_CITY,CUST_STATE,CUST_POSTAL_CODE,PHONE_NUMBER1,PHONE_NUMBER2,CREDIT_LIMIT,CUST_EMAIL) values (6,'Albert','Lambert','10701 Lambert International Blvd.',null,'St. Louis','MO','63145','314-555-4022',null,1000,null);
Insert into XE.DEMO_CUSTOMERS (CUSTOMER_ID,CUST_FIRST_NAME,CUST_LAST_NAME,CUST_STREET_ADDRESS1,CUST_STREET_ADDRESS2,CUST_CITY,CUST_STATE,CUST_POSTAL_CODE,PHONE_NUMBER1,PHONE_NUMBER2,CREDIT_LIMIT,CUST_EMAIL) values (7,'Eugene','Bradley','Schoephoester Road',null,'Windsor Locks','CT','06096','860-555-1835',null,1000,null);
REM INSERTING into XE.DEMO_ORDERS
SET DEFINE OFF;
Insert into XE.DEMO_ORDERS (ORDER_ID,CUSTOMER_ID,ORDER_TOTAL,ORDER_TIMESTAMP,USER_ID) values (1,7,1890,to_date('20/07/21','RR/MM/DD'),2);
Insert into XE.DEMO_ORDERS (ORDER_ID,CUSTOMER_ID,ORDER_TOTAL,ORDER_TIMESTAMP,USER_ID) values (2,1,2380,to_date('20/07/18','RR/MM/DD'),2);
Insert into XE.DEMO_ORDERS (ORDER_ID,CUSTOMER_ID,ORDER_TOTAL,ORDER_TIMESTAMP,USER_ID) values (3,2,1640,to_date('20/07/12','RR/MM/DD'),2);
Insert into XE.DEMO_ORDERS (ORDER_ID,CUSTOMER_ID,ORDER_TOTAL,ORDER_TIMESTAMP,USER_ID) values (4,5,1090,to_date('20/07/04','RR/MM/DD'),2);
Insert into XE.DEMO_ORDERS (ORDER_ID,CUSTOMER_ID,ORDER_TOTAL,ORDER_TIMESTAMP,USER_ID) values (5,6,950,to_date('20/06/29','RR/MM/DD'),2);
Insert into XE.DEMO_ORDERS (ORDER_ID,CUSTOMER_ID,ORDER_TOTAL,ORDER_TIMESTAMP,USER_ID) values (6,3,1515,to_date('20/06/24','RR/MM/DD'),2);
Insert into XE.DEMO_ORDERS (ORDER_ID,CUSTOMER_ID,ORDER_TOTAL,ORDER_TIMESTAMP,USER_ID) values (7,3,905,to_date('20/06/14','RR/MM/DD'),2);
Insert into XE.DEMO_ORDERS (ORDER_ID,CUSTOMER_ID,ORDER_TOTAL,ORDER_TIMESTAMP,USER_ID) values (8,4,1060,to_date('20/06/12','RR/MM/DD'),2);
Insert into XE.DEMO_ORDERS (ORDER_ID,CUSTOMER_ID,ORDER_TOTAL,ORDER_TIMESTAMP,USER_ID) values (9,2,730,to_date('20/06/01','RR/MM/DD'),2);
Insert into XE.DEMO_ORDERS (ORDER_ID,CUSTOMER_ID,ORDER_TOTAL,ORDER_TIMESTAMP,USER_ID) values (10,7,870,to_date('20/05/18','RR/MM/DD'),2);
REM INSERTING into XE.DEMO_ORDER_ITEMS
SET DEFINE OFF;
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (1,1,1,50,10);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (2,1,2,80,8);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (3,1,3,150,5);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (4,2,1,50,3);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (5,2,2,80,3);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (6,2,3,150,3);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (7,2,4,60,3);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (8,2,5,80,3);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (9,2,6,120,2);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (10,2,7,30,2);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (11,2,8,125,4);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (12,2,9,110,2);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (13,2,10,50,2);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (14,3,4,60,4);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (15,3,5,80,4);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (16,3,6,120,4);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (17,3,8,125,4);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (18,3,10,50,2);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (19,4,6,120,2);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (20,4,7,30,6);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (21,4,8,125,2);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (22,4,9,110,2);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (23,4,10,50,4);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (24,5,1,50,3);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (25,5,2,80,2);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (26,5,3,150,2);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (27,5,4,60,3);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (28,5,5,80,2);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (29,6,3,150,3);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (30,6,6,120,3);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (31,6,8,125,3);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (32,6,9,110,3);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (33,7,1,50,2);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (34,7,2,80,2);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (35,7,4,60,2);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (36,7,5,80,2);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (37,7,7,30,3);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (38,7,8,125,1);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (39,7,10,50,3);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (40,8,2,80,2);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (41,8,3,150,3);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (42,8,6,120,1);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (43,8,9,110,3);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (44,9,4,60,4);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (45,9,5,80,3);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (46,9,8,125,2);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (47,10,1,50,5);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (48,10,2,80,4);
Insert into XE.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (49,10,3,150,2);
REM INSERTING into XE.DEMO_PRODUCT_INFO
SET DEFINE OFF;
Insert into XE.DEMO_PRODUCT_INFO (PRODUCT_ID,PRODUCT_NAME,PRODUCT_DESCRIPTION,CATEGORY,PRODUCT_AVAIL,LIST_PRICE,MIMETYPE,FILENAME,IMAGE_LAST_UPDATE) values (1,'Business Shirt','Wrinkle-free cotton business shirt','Mens','Y',50,'image/jpeg','shirt.jpg',to_date('20/07/22','RR/MM/DD'));
Insert into XE.DEMO_PRODUCT_INFO (PRODUCT_ID,PRODUCT_NAME,PRODUCT_DESCRIPTION,CATEGORY,PRODUCT_AVAIL,LIST_PRICE,MIMETYPE,FILENAME,IMAGE_LAST_UPDATE) values (2,'Trousers','Black trousers suitable for every business man','Mens','Y',80,'image/jpeg','pants.jpg',to_date('20/07/22','RR/MM/DD'));
Insert into XE.DEMO_PRODUCT_INFO (PRODUCT_ID,PRODUCT_NAME,PRODUCT_DESCRIPTION,CATEGORY,PRODUCT_AVAIL,LIST_PRICE,MIMETYPE,FILENAME,IMAGE_LAST_UPDATE) values (3,'Jacket','Fully lined jacket which is both professional and extremely comfortable to wear','Mens','Y',150,'image/jpeg','jacket.jpg',to_date('20/07/22','RR/MM/DD'));
Insert into XE.DEMO_PRODUCT_INFO (PRODUCT_ID,PRODUCT_NAME,PRODUCT_DESCRIPTION,CATEGORY,PRODUCT_AVAIL,LIST_PRICE,MIMETYPE,FILENAME,IMAGE_LAST_UPDATE) values (4,'Blouse','Silk blouse ideal for all business women','Womens','Y',60,'image/jpeg','blouse.jpg',to_date('20/07/22','RR/MM/DD'));
Insert into XE.DEMO_PRODUCT_INFO (PRODUCT_ID,PRODUCT_NAME,PRODUCT_DESCRIPTION,CATEGORY,PRODUCT_AVAIL,LIST_PRICE,MIMETYPE,FILENAME,IMAGE_LAST_UPDATE) values (5,'Skirt','Wrinkle free skirt','Womens','Y',80,'image/jpeg','skirt.jpg',to_date('20/07/22','RR/MM/DD'));
Insert into XE.DEMO_PRODUCT_INFO (PRODUCT_ID,PRODUCT_NAME,PRODUCT_DESCRIPTION,CATEGORY,PRODUCT_AVAIL,LIST_PRICE,MIMETYPE,FILENAME,IMAGE_LAST_UPDATE) values (6,'Ladies Shoes','Low heel and cushioned interior for comfort and style in simple yet elegant shoes','Womens','Y',120,'image/jpeg','heels.jpg',to_date('20/07/22','RR/MM/DD'));
Insert into XE.DEMO_PRODUCT_INFO (PRODUCT_ID,PRODUCT_NAME,PRODUCT_DESCRIPTION,CATEGORY,PRODUCT_AVAIL,LIST_PRICE,MIMETYPE,FILENAME,IMAGE_LAST_UPDATE) values (7,'Belt','Leather belt','Accessories','Y',30,'image/jpeg','belt.jpg',to_date('20/07/22','RR/MM/DD'));
Insert into XE.DEMO_PRODUCT_INFO (PRODUCT_ID,PRODUCT_NAME,PRODUCT_DESCRIPTION,CATEGORY,PRODUCT_AVAIL,LIST_PRICE,MIMETYPE,FILENAME,IMAGE_LAST_UPDATE) values (8,'Bag','Unisex bag suitable for carrying laptops with room for many additional items','Accessories','Y',125,'image/jpeg','bag.jpg',to_date('20/07/22','RR/MM/DD'));
Insert into XE.DEMO_PRODUCT_INFO (PRODUCT_ID,PRODUCT_NAME,PRODUCT_DESCRIPTION,CATEGORY,PRODUCT_AVAIL,LIST_PRICE,MIMETYPE,FILENAME,IMAGE_LAST_UPDATE) values (9,'Mens Shoes','Leather upper and lower lace up shoes','Mens','Y',110,'image/jpeg','shoes.jpg',to_date('20/07/22','RR/MM/DD'));
Insert into XE.DEMO_PRODUCT_INFO (PRODUCT_ID,PRODUCT_NAME,PRODUCT_DESCRIPTION,CATEGORY,PRODUCT_AVAIL,LIST_PRICE,MIMETYPE,FILENAME,IMAGE_LAST_UPDATE) values (10,'Wallet','Travel wallet suitable for men and women. Several compartments for credit cards, passports and cash','Accessories','Y',50,'image/jpeg','wallet.jpg',to_date('20/07/22','RR/MM/DD'));
REM INSERTING into XE.DEMO_STATES
SET DEFINE OFF;
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('AK','ALASKA');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('AL','ALABAMA');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('AR','ARKANSAS');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('AZ','ARIZONA');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('CA','CALIFORNIA');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('CO','COLORADO');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('CT','CONNECTICUT');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('DC','DISTRICT OF COLUMBIA');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('DE','DELAWARE');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('FL','FLORIDA');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('GA','GEORGIA');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('HI','HAWAII');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('IA','IOWA');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('ID','IDAHO');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('IL','ILLINOIS');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('IN','INDIANA');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('KS','KANSAS');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('KY','KENTUCKY');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('LA','LOUISIANA');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('MA','MASSACHUSETTS');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('MD','MARYLAND');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('ME','MAINE');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('MI','MICHIGAN');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('MN','MINNESOTA');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('MO','MISSOURI');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('MS','MISSISSIPPI');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('MT','MONTANA');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('NC','NORTH CAROLINA');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('ND','NORTH DAKOTA');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('NE','NEBRASKA');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('NH','NEW HAMPSHIRE');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('NJ','NEW JERSEY');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('NM','NEW MEXICO');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('NV','NEVADA');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('NY','NEW YORK');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('OH','OHIO');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('OK','OKLAHOMA');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('OR','OREGON');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('PA','PENNSYLVANIA');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('RI','RHODE ISLAND');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('SC','SOUTH CAROLINA');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('SD','SOUTH DAKOTA');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('TN','TENNESSEE');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('TX','TEXAS');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('UT','UTAH');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('VA','VIRGINIA');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('VT','VERMONT');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('WA','WASHINGTON');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('WI','WISCONSIN');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('WV','WEST VIRGINIA');
Insert into XE.DEMO_STATES (ST,STATE_NAME) values ('WY','WYOMING');
REM INSERTING into XE.DEMO_USERS
SET DEFINE OFF;
Insert into XE.DEMO_USERS (USER_ID,USER_NAME,PASSWORD,CREATED_ON,QUOTA,PRODUCTS,EXPIRES_ON,ADMIN_USER) values (1,'ADMIN','BB747D23931F4131E841DD70CF8C2FFC',to_date('20/07/22','RR/MM/DD'),null,'Y',null,'Y');
Insert into XE.DEMO_USERS (USER_ID,USER_NAME,PASSWORD,CREATED_ON,QUOTA,PRODUCTS,EXPIRES_ON,ADMIN_USER) values (2,'DEMO','C0E5D3DE27695CB6F8D26A9B6AA4D19B',to_date('20/07/22','RR/MM/DD'),15000,'Y',null,'N');
REM INSERTING into XE.DEPT
SET DEFINE OFF;
Insert into XE.DEPT (DEPTNO,DNAME,LOC) values (10,'ACCOUNTING','NEW YORK');
Insert into XE.DEPT (DEPTNO,DNAME,LOC) values (20,'RESEARCH','DALLAS');
Insert into XE.DEPT (DEPTNO,DNAME,LOC) values (30,'SALES','CHICAGO');
Insert into XE.DEPT (DEPTNO,DNAME,LOC) values (40,'OPERATIONS','BOSTON');
REM INSERTING into XE.EMP
SET DEFINE OFF;
Insert into XE.EMP (EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO) values (7839,'KING','PRESIDENT',null,to_date('81/11/17','RR/MM/DD'),5000,null,10);
Insert into XE.EMP (EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO) values (7698,'BLAKE','MANAGER',7839,to_date('81/05/01','RR/MM/DD'),2850,null,30);
Insert into XE.EMP (EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO) values (7782,'CLARK','MANAGER',7839,to_date('81/06/09','RR/MM/DD'),2450,null,10);
Insert into XE.EMP (EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO) values (7566,'JONES','MANAGER',7839,to_date('81/04/02','RR/MM/DD'),2975,null,20);
Insert into XE.EMP (EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO) values (7788,'SCOTT','ANALYST',7566,to_date('82/12/09','RR/MM/DD'),3000,null,20);
Insert into XE.EMP (EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO) values (7902,'FORD','ANALYST',7566,to_date('81/12/03','RR/MM/DD'),3000,null,20);
Insert into XE.EMP (EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO) values (7369,'SMITH','CLERK',7902,to_date('80/12/17','RR/MM/DD'),800,null,20);
Insert into XE.EMP (EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO) values (7499,'ALLEN','SALESMAN',7698,to_date('81/02/20','RR/MM/DD'),1600,300,30);
Insert into XE.EMP (EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO) values (7521,'WARD','SALESMAN',7698,to_date('81/02/22','RR/MM/DD'),1250,500,30);
Insert into XE.EMP (EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO) values (7654,'MARTIN','SALESMAN',7698,to_date('81/09/28','RR/MM/DD'),1250,1400,30);
Insert into XE.EMP (EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO) values (7844,'TURNER','SALESMAN',7698,to_date('81/09/08','RR/MM/DD'),1500,0,30);
Insert into XE.EMP (EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO) values (7876,'ADAMS','CLERK',7788,to_date('83/01/12','RR/MM/DD'),1100,null,20);
Insert into XE.EMP (EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO) values (7900,'JAMES','CLERK',7698,to_date('81/12/03','RR/MM/DD'),950,null,30);
Insert into XE.EMP (EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO) values (7934,'MILLER','CLERK',7782,to_date('82/01/23','RR/MM/DD'),1300,null,10);
REM INSERTING into XE.MEMBER
SET DEFINE OFF;
Insert into XE.MEMBER (USERID,USERPW,USERNAME,EMAIL,REGDATE,UPDATEDATE) values ('user2','1234','kimilguk','user02@test.com',to_date('20/08/18','RR/MM/DD'),to_date('20/08/18','RR/MM/DD'));
Insert into XE.MEMBER (USERID,USERPW,USERNAME,EMAIL,REGDATE,UPDATEDATE) values ('user_97','1234','각시탈','user10@test.com',to_date('20/08/26','RR/MM/DD'),to_date('20/08/26','RR/MM/DD'));
REM INSERTING into XE.TBL_ATTACH
SET DEFINE OFF;
Insert into XE.TBL_ATTACH (FULL_NAME,BNO,REGDATE) values ('ABC.JPG',1,to_date('20/07/29','RR/MM/DD'));
Insert into XE.TBL_ATTACH (FULL_NAME,BNO,REGDATE) values ('1319e34a-bc70-449e-9942-db615b0ba113.jpg',122,to_date('20/08/26','RR/MM/DD'));
Insert into XE.TBL_ATTACH (FULL_NAME,BNO,REGDATE) values ('996ef7b8-6ddf-4383-b1c2-ce169f203578.jpg',111,to_date('20/08/26','RR/MM/DD'));
Insert into XE.TBL_ATTACH (FULL_NAME,BNO,REGDATE) values ('82740079-7afa-4d95-a8ed-a617c02a43fe.jpg',100,to_date('20/08/26','RR/MM/DD'));
Insert into XE.TBL_ATTACH (FULL_NAME,BNO,REGDATE) values ('8b62c29e-5cb8-4dc9-801a-4784404d8b26.jpg',98,to_date('20/07/30','RR/MM/DD'));
Insert into XE.TBL_ATTACH (FULL_NAME,BNO,REGDATE) values ('f0c6eb58-1eaf-4405-a5d2-a1a920f2c695.jpg',99,to_date('20/07/30','RR/MM/DD'));
REM INSERTING into XE.TBL_BOARD
SET DEFINE OFF;
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (1,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),1,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (2,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (3,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (4,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (5,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (6,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (7,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (8,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (9,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (10,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (11,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (12,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (13,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (14,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (15,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (16,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (17,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (18,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (19,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (20,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (21,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (22,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (23,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (24,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (25,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (26,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (27,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (28,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (29,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (30,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (31,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (32,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (33,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (34,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (35,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (36,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (37,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (38,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (39,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (40,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),1,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (41,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (42,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (43,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (44,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (45,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (46,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (47,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),1,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (48,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (49,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),10,0,'notice');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (51,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (52,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (53,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (54,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (55,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (56,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (57,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (58,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (59,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (60,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (61,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (62,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (63,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (64,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (65,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (66,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (67,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (68,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (69,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (70,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (71,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (72,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (73,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (74,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (75,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (76,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (77,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (78,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (79,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (80,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (81,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (82,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (83,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (84,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (85,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (86,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (87,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (88,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (89,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (90,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (91,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (92,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (93,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (94,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (95,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (96,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),0,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (97,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),1,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (98,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),1,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (99,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/07/30','RR/MM/DD'),3,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (100,'게시물 제목','관리자',to_timestamp('20/07/30 09:15:37.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/08/26','RR/MM/DD'),2,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (111,'파일 업로드','둘리',to_timestamp('20/07/30 12:39:07.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/08/26','RR/MM/DD'),3,0,'gallery');
Insert into XE.TBL_BOARD (BNO,TITLE,WRITER,REGDATE,UPDATE_DATE,VIEW_COUNT,REPLY_COUNT,BOD_TYPE) values (122,'갤러리','갤러리',to_timestamp('20/07/31 10:23:01.000000000','RR/MM/DD HH24:MI:SSXFF'),to_date('20/08/26','RR/MM/DD'),1,0,'gallery');
REM INSERTING into XE.TBL_BOARD_TYPE
SET DEFINE OFF;
Insert into XE.TBL_BOARD_TYPE (BOD_TYPE,BOD_NAME,BOD_SUN) values ('notice','공지사항',1);
Insert into XE.TBL_BOARD_TYPE (BOD_TYPE,BOD_NAME,BOD_SUN) values ('gallery','갤러리',2);
REM INSERTING into XE.TBL_MEMBER
SET DEFINE OFF;
Insert into XE.TBL_MEMBER (USER_ID,USER_PW,USER_NAME,EMAIL,POINT,ENABLED,LEVELS,REG_DATE,UPDATE_DATE) values ('admin','$2a$10$hF1.GsIESH2qoy7L5iM1/ONJJg7QUs5JoQCo6bOUhlWnXOw2zb5FK','이주영','aaa@test.com',0,1,'ROLE_ADMIN',to_date('20/07/29','RR/MM/DD'),to_date('20/08/06','RR/MM/DD'));
Insert into XE.TBL_MEMBER (USER_ID,USER_PW,USER_NAME,EMAIL,POINT,ENABLED,LEVELS,REG_DATE,UPDATE_DATE) values ('user03','$2a$10$lJXM2XuU44tH9Ez2./cwdeOUn6oMNIcywuJfgBC.RCp0Nh1742.4u','사용자3','user03@us.com',0,0,'ROLE_USER',to_date('20/01/02','RR/MM/DD'),to_date('20/08/18','RR/MM/DD'));
Insert into XE.TBL_MEMBER (USER_ID,USER_PW,USER_NAME,EMAIL,POINT,ENABLED,LEVELS,REG_DATE,UPDATE_DATE) values ('user01','1234','사용자1','bbb@test.com',0,0,'ROLE_USER',to_date('20/01/01','RR/MM/DD'),to_date('20/08/10','RR/MM/DD'));
Insert into XE.TBL_MEMBER (USER_ID,USER_PW,USER_NAME,EMAIL,POINT,ENABLED,LEVELS,REG_DATE,UPDATE_DATE) values ('user02','1234','사용자2','ccc@test.com',0,0,'ROLE_USER',to_date('20/01/01','RR/MM/DD'),to_date('20/08/10','RR/MM/DD'));
REM INSERTING into XE.TBL_REPLY
SET DEFINE OFF;
Insert into XE.TBL_REPLY (RNO,BNO,REPLYTEXT,REPLYER,REGDATE,UPDATE_DATE) values (1,1,'댓글내용','작성자',to_date('20/07/29','RR/MM/DD'),to_date('20/07/29','RR/MM/DD'));
REM INSERTING into XE.VIEW_REPLY_CNT
SET DEFINE OFF;
Insert into XE.VIEW_REPLY_CNT (BNO,TITLE,REPLYTEXT,CNT) values (1,'게시물 제목','댓글내용',1);
--------------------------------------------------------
--  DDL for Index APEX$_ACL_IDX1
--------------------------------------------------------

  CREATE INDEX "XE"."APEX$_ACL_IDX1" ON "XE"."APEX$_ACL" ("WS_APP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_ACL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "XE"."APEX$_ACL_PK" ON "XE"."APEX$_ACL" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_FILES_IDX1
--------------------------------------------------------

  CREATE INDEX "XE"."APEX$_WS_FILES_IDX1" ON "XE"."APEX$_WS_FILES" ("WS_APP_ID", "DATA_GRID_ID", "ROW_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_FILES_IDX2
--------------------------------------------------------

  CREATE INDEX "XE"."APEX$_WS_FILES_IDX2" ON "XE"."APEX$_WS_FILES" ("WS_APP_ID", "WEBPAGE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_FILES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "XE"."APEX$_WS_FILES_PK" ON "XE"."APEX$_WS_FILES" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_HISTORY_IDX
--------------------------------------------------------

  CREATE INDEX "XE"."APEX$_WS_HISTORY_IDX" ON "XE"."APEX$_WS_HISTORY" ("WS_APP_ID", "DATA_GRID_ID", "ROW_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_LINKS_IDX1
--------------------------------------------------------

  CREATE INDEX "XE"."APEX$_WS_LINKS_IDX1" ON "XE"."APEX$_WS_LINKS" ("WS_APP_ID", "DATA_GRID_ID", "ROW_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_LINKS_IDX2
--------------------------------------------------------

  CREATE INDEX "XE"."APEX$_WS_LINKS_IDX2" ON "XE"."APEX$_WS_LINKS" ("WS_APP_ID", "WEBPAGE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_LINKS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "XE"."APEX$_WS_LINKS_PK" ON "XE"."APEX$_WS_LINKS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_NOTES_IDX1
--------------------------------------------------------

  CREATE INDEX "XE"."APEX$_WS_NOTES_IDX1" ON "XE"."APEX$_WS_NOTES" ("WS_APP_ID", "DATA_GRID_ID", "ROW_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_NOTES_IDX2
--------------------------------------------------------

  CREATE INDEX "XE"."APEX$_WS_NOTES_IDX2" ON "XE"."APEX$_WS_NOTES" ("WS_APP_ID", "WEBPAGE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_NOTES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "XE"."APEX$_WS_NOTES_PK" ON "XE"."APEX$_WS_NOTES" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_ROWS_IDX
--------------------------------------------------------

  CREATE INDEX "XE"."APEX$_WS_ROWS_IDX" ON "XE"."APEX$_WS_ROWS" ("WS_APP_ID", "DATA_GRID_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_ROWS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "XE"."APEX$_WS_ROWS_PK" ON "XE"."APEX$_WS_ROWS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_TAGS_IDX1
--------------------------------------------------------

  CREATE INDEX "XE"."APEX$_WS_TAGS_IDX1" ON "XE"."APEX$_WS_TAGS" ("WS_APP_ID", "DATA_GRID_ID", "ROW_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_TAGS_IDX2
--------------------------------------------------------

  CREATE INDEX "XE"."APEX$_WS_TAGS_IDX2" ON "XE"."APEX$_WS_TAGS" ("WS_APP_ID", "WEBPAGE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_TAGS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "XE"."APEX$_WS_TAGS_PK" ON "XE"."APEX$_WS_TAGS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_WEBPG_SECHIST_IDX1
--------------------------------------------------------

  CREATE INDEX "XE"."APEX$_WS_WEBPG_SECHIST_IDX1" ON "XE"."APEX$_WS_WEBPG_SECTION_HISTORY" ("WS_APP_ID", "WEBPAGE_ID", "SECTION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_WEBPG_SECTIONS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "XE"."APEX$_WS_WEBPG_SECTIONS_PK" ON "XE"."APEX$_WS_WEBPG_SECTIONS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index ATTACH_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "XE"."ATTACH_PK" ON "XE"."TBL_ATTACH" ("FULL_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index BOARD_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "XE"."BOARD_PK" ON "XE"."TBL_BOARD" ("BNO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index DEMO_CUSTOMERS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "XE"."DEMO_CUSTOMERS_PK" ON "XE"."DEMO_CUSTOMERS" ("CUSTOMER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index DEMO_CUST_NAME_IX
--------------------------------------------------------

  CREATE INDEX "XE"."DEMO_CUST_NAME_IX" ON "XE"."DEMO_CUSTOMERS" ("CUST_LAST_NAME", "CUST_FIRST_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index DEMO_ORDER_ITEMS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "XE"."DEMO_ORDER_ITEMS_PK" ON "XE"."DEMO_ORDER_ITEMS" ("ORDER_ITEM_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index DEMO_ORDER_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "XE"."DEMO_ORDER_PK" ON "XE"."DEMO_ORDERS" ("ORDER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index DEMO_ORD_CUSTOMER_IX
--------------------------------------------------------

  CREATE INDEX "XE"."DEMO_ORD_CUSTOMER_IX" ON "XE"."DEMO_ORDERS" ("CUSTOMER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index DEMO_PRODUCT_INFO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "XE"."DEMO_PRODUCT_INFO_PK" ON "XE"."DEMO_PRODUCT_INFO" ("PRODUCT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index DEMO_USERS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "XE"."DEMO_USERS_PK" ON "XE"."DEMO_USERS" ("USER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index MEMBERS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "XE"."MEMBERS_PK" ON "XE"."MEMBER" ("USERID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index MEMBER_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "XE"."MEMBER_PK" ON "XE"."TBL_MEMBER" ("USER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index REPLY_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "XE"."REPLY_PK" ON "XE"."TBL_REPLY" ("RNO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C006997
--------------------------------------------------------

  CREATE UNIQUE INDEX "XE"."SYS_C006997" ON "XE"."DEPT" ("DEPTNO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C006999
--------------------------------------------------------

  CREATE UNIQUE INDEX "XE"."SYS_C006999" ON "XE"."EMP" ("EMPNO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TBL_BOARD_TYPE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "XE"."TBL_BOARD_TYPE_PK" ON "XE"."TBL_BOARD_TYPE" ("BOD_TYPE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Trigger APEX$_ACL_T1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "XE"."APEX$_ACL_T1" 
before insert or update on "APEX$_ACL"
for each row
begin
    --
    -- maintain pk and timestamps
    --
    :new.username := upper(:new.username);
    if inserting and :new.id is null then
        select to_number(sys_guid(),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') into :new.id from dual;
    end if;
    if inserting then
        :new.created_on := sysdate;
        :new.created_by := nvl(v('APP_USER'),user);
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
    elsif updating then
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
    end if;
end;
/
ALTER TRIGGER "XE"."APEX$_ACL_T1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger APEX$_WS_FILES_T1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "XE"."APEX$_WS_FILES_T1" 
before insert or update on "APEX$_WS_FILES"
for each row
begin
    --
    -- maintain pk and timestamps
    --
    if inserting and :new.id is null then
        select to_number(sys_guid(),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') into :new.id from dual;
    end if;
    if inserting and :new.image_alias is null then
        :new.image_alias := :new.name;
    end if;
    if inserting then
        :new.created_on := sysdate;
        :new.created_by := nvl(v('APP_USER'),user);
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
        :new.content_last_update := sysdate;
    elsif updating then
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
        if nvl(length(:new.content),0) <> nvl(length(:old.content),0) then
            :new.content_last_update := sysdate;
        end if;
    end if;
end;
/
ALTER TRIGGER "XE"."APEX$_WS_FILES_T1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger APEX$_WS_LINKS_T1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "XE"."APEX$_WS_LINKS_T1" 
before insert or update on "APEX$_WS_LINKS"
for each row
begin
    --
    -- maintain pk and timestamps
    --
    if inserting and :new.id is null then
        select to_number(sys_guid(),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') into :new.id from dual;
    end if;
    if inserting then
        :new.created_on := sysdate;
        :new.created_by := nvl(v('APP_USER'),user);
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
    elsif updating then
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
    end if;
end;
/
ALTER TRIGGER "XE"."APEX$_WS_LINKS_T1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger APEX$_WS_NOTES_T1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "XE"."APEX$_WS_NOTES_T1" 
before insert or update on "APEX$_WS_NOTES"
for each row
begin
    --
    -- maintain pk and timestamps
    --
    if inserting and :new.id is null then
        select to_number(sys_guid(),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') into :new.id from dual;
    end if;
    if inserting then
        :new.created_on := sysdate;
        :new.created_by := nvl(v('APP_USER'),user);
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
    elsif updating then
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
    end if;
end;
/
ALTER TRIGGER "XE"."APEX$_WS_NOTES_T1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger APEX$_WS_ROWS_T1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "XE"."APEX$_WS_ROWS_T1" 
before insert or update on "APEX$_WS_ROWS"
for each row
declare
    l_tag_list apex_application_global.vc_arr2;
    type col_arr is table of varchar2(32767) index by varchar2(255);
    la_col_label col_arr;
    procedure datagrid_logging( 
        p_row_id       in number,
        p_ws_app_id    in number,
        p_data_grid_id in number,
        p_col_name     in varchar2,
        p_type         in varchar2,
        p_old_c        in varchar2 default null,
        p_new_c        in varchar2 default null,
        p_old_d        in date default null,
        p_new_d        in date default null,
        p_old_n        in number default null,
        p_new_n        in number default null)
    is
    begin
        case p_type
        when 'C' then
          if (p_old_c is null and p_new_c is not null) or (p_old_c is not null and p_new_c is null) or (p_old_c != p_new_c) then
              insert into apex$_ws_history (row_id, ws_app_id, data_grid_id, column_name, old_value, new_value, change_date, application_user_id)
              values (p_row_id, p_ws_app_id, p_data_grid_id, p_col_name, p_old_c, p_new_c, sysdate, v('APP_USER'));
          end if;
        when 'D' then
          if (p_old_d is null and p_new_d is not null) or (p_old_d is not null and p_new_d is null) or (p_old_d != p_new_d) then
              insert into apex$_ws_history (row_id, ws_app_id, data_grid_id, column_name, old_value,  new_value, change_date, application_user_id)
              values (p_row_id, p_ws_app_id, p_data_grid_id, p_col_name, p_old_d, p_new_d, sysdate, v('APP_USER'));
        	  end if;
        when 'N' then
          if (p_old_n is null and p_new_n is not null) or (p_old_n is not null and p_new_n is null) or (p_old_n != p_new_n) then
              insert into apex$_ws_history (row_id, ws_app_id, data_grid_id, column_name, old_value,  new_value, change_date, application_user_id)
              values (p_row_id, p_ws_app_id, p_data_grid_id, p_col_name, p_old_n, p_new_n, sysdate, v('APP_USER'));
          end if;
        end case;
    end datagrid_logging;
    procedure wa( p_c in out nocopy clob, p_buf in varchar2 )
    is
    l_lf varchar2(2) := unistr('\000a');
    begin
    if p_buf is not null then dbms_lob.writeappend( p_c, length(p_buf||l_lf), upper(p_buf)||l_lf); end if;
    end wa;
begin
    --
    -- maintain pk and timestamps
    --
    if inserting and :new.id is null then
        select to_number(sys_guid(),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') into :new.id from dual;
    end if;
    if inserting then
        :new.created_on := sysdate;
        :new.created_by := nvl(v('APP_USER'),user);
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
        select to_number(sys_guid(),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') into :new.load_order from dual;
        :new.change_count := 0;
    elsif updating then
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
        :new.change_count := :old.change_count + 1;
    end if;
    --
    -- inserting remove chr 13
    --
    if instr(:new.c001,chr(13)) > 0 then :new.c001 := replace(:new.c001,chr(13),null); end if;
    if instr(:new.c002,chr(13)) > 0 then :new.c002 := replace(:new.c002,chr(13),null); end if;
    if instr(:new.c003,chr(13)) > 0 then :new.c003 := replace(:new.c003,chr(13),null); end if;
    if instr(:new.c004,chr(13)) > 0 then :new.c004 := replace(:new.c004,chr(13),null); end if;
    if instr(:new.c005,chr(13)) > 0 then :new.c005 := replace(:new.c005,chr(13),null); end if;
    if instr(:new.c006,chr(13)) > 0 then :new.c006 := replace(:new.c006,chr(13),null); end if;
    if instr(:new.c007,chr(13)) > 0 then :new.c007 := replace(:new.c007,chr(13),null); end if;
    if instr(:new.c008,chr(13)) > 0 then :new.c008 := replace(:new.c008,chr(13),null); end if;
    if instr(:new.c009,chr(13)) > 0 then :new.c009 := replace(:new.c009,chr(13),null); end if;
    if instr(:new.c010,chr(13)) > 0 then :new.c010 := replace(:new.c010,chr(13),null); end if;
    if instr(:new.c011,chr(13)) > 0 then :new.c011 := replace(:new.c011,chr(13),null); end if;
    if instr(:new.c012,chr(13)) > 0 then :new.c012 := replace(:new.c012,chr(13),null); end if;
    if instr(:new.c013,chr(13)) > 0 then :new.c013 := replace(:new.c013,chr(13),null); end if;
    if instr(:new.c014,chr(13)) > 0 then :new.c014 := replace(:new.c014,chr(13),null); end if;
    if instr(:new.c015,chr(13)) > 0 then :new.c015 := replace(:new.c015,chr(13),null); end if;
    if instr(:new.c016,chr(13)) > 0 then :new.c016 := replace(:new.c016,chr(13),null); end if;
    if instr(:new.c017,chr(13)) > 0 then :new.c017 := replace(:new.c017,chr(13),null); end if;
    if instr(:new.c018,chr(13)) > 0 then :new.c018 := replace(:new.c018,chr(13),null); end if;
    if instr(:new.c019,chr(13)) > 0 then :new.c019 := replace(:new.c019,chr(13),null); end if;
    if instr(:new.c020,chr(13)) > 0 then :new.c020 := replace(:new.c010,chr(23),null); end if;
    if instr(:new.c021,chr(13)) > 0 then :new.c021 := replace(:new.c001,chr(23),null); end if;
    if instr(:new.c022,chr(13)) > 0 then :new.c022 := replace(:new.c002,chr(23),null); end if;
    if instr(:new.c023,chr(13)) > 0 then :new.c023 := replace(:new.c003,chr(23),null); end if;
    if instr(:new.c024,chr(13)) > 0 then :new.c024 := replace(:new.c004,chr(23),null); end if;
    if instr(:new.c025,chr(13)) > 0 then :new.c025 := replace(:new.c005,chr(23),null); end if;
    if instr(:new.c026,chr(13)) > 0 then :new.c026 := replace(:new.c006,chr(23),null); end if;
    if instr(:new.c027,chr(13)) > 0 then :new.c027 := replace(:new.c007,chr(23),null); end if;
    if instr(:new.c028,chr(13)) > 0 then :new.c028 := replace(:new.c008,chr(23),null); end if;
    if instr(:new.c029,chr(13)) > 0 then :new.c029 := replace(:new.c009,chr(23),null); end if;
    if instr(:new.c030,chr(13)) > 0 then :new.c030 := replace(:new.c030,chr(13),null); end if;
    if instr(:new.c031,chr(13)) > 0 then :new.c031 := replace(:new.c031,chr(13),null); end if;
    if instr(:new.c032,chr(13)) > 0 then :new.c032 := replace(:new.c032,chr(13),null); end if;
    if instr(:new.c033,chr(13)) > 0 then :new.c033 := replace(:new.c033,chr(13),null); end if;
    if instr(:new.c034,chr(13)) > 0 then :new.c034 := replace(:new.c034,chr(13),null); end if;
    if instr(:new.c035,chr(13)) > 0 then :new.c035 := replace(:new.c035,chr(13),null); end if;
    if instr(:new.c036,chr(13)) > 0 then :new.c036 := replace(:new.c036,chr(13),null); end if;
    if instr(:new.c037,chr(13)) > 0 then :new.c037 := replace(:new.c037,chr(13),null); end if;
    if instr(:new.c038,chr(13)) > 0 then :new.c038 := replace(:new.c038,chr(13),null); end if;
    if instr(:new.c039,chr(13)) > 0 then :new.c039 := replace(:new.c039,chr(13),null); end if;
    if instr(:new.c040,chr(13)) > 0 then :new.c040 := replace(:new.c040,chr(13),null); end if;
    if instr(:new.c041,chr(13)) > 0 then :new.c041 := replace(:new.c041,chr(13),null); end if;
    if instr(:new.c042,chr(13)) > 0 then :new.c042 := replace(:new.c042,chr(13),null); end if;
    if instr(:new.c043,chr(13)) > 0 then :new.c043 := replace(:new.c043,chr(13),null); end if;
    if instr(:new.c044,chr(13)) > 0 then :new.c044 := replace(:new.c044,chr(13),null); end if;
    if instr(:new.c045,chr(13)) > 0 then :new.c045 := replace(:new.c045,chr(13),null); end if;
    if instr(:new.c046,chr(13)) > 0 then :new.c046 := replace(:new.c046,chr(13),null); end if;
    if instr(:new.c047,chr(13)) > 0 then :new.c047 := replace(:new.c047,chr(13),null); end if;
    if instr(:new.c048,chr(13)) > 0 then :new.c048 := replace(:new.c048,chr(13),null); end if;
    if instr(:new.c049,chr(13)) > 0 then :new.c049 := replace(:new.c049,chr(13),null); end if;
    if instr(:new.c050,chr(13)) > 0 then :new.c050 := replace(:new.c050,chr(13),null); end if;
    if :new.search_clob is null then
        dbms_lob.createtemporary( :new.search_clob, false, dbms_lob.session );
    else
        dbms_lob.trim( :new.search_clob, 0 );
    end if;
    wa(:new.search_clob,:new.c001);wa(:new.search_clob,:new.c002);wa(:new.search_clob,:new.c003);
    wa(:new.search_clob,:new.c004);wa(:new.search_clob,:new.c005);wa(:new.search_clob,:new.c006);
    wa(:new.search_clob,:new.c007);wa(:new.search_clob,:new.c008);wa(:new.search_clob,:new.c009);
    wa(:new.search_clob,:new.c010);wa(:new.search_clob,:new.c011);wa(:new.search_clob,:new.c012);
    wa(:new.search_clob,:new.c013);wa(:new.search_clob,:new.c014);wa(:new.search_clob,:new.c015);
    wa(:new.search_clob,:new.c016);wa(:new.search_clob,:new.c017);wa(:new.search_clob,:new.c018);
    wa(:new.search_clob,:new.c019);wa(:new.search_clob,:new.c020);wa(:new.search_clob,:new.c021);
    wa(:new.search_clob,:new.c022);wa(:new.search_clob,:new.c023);wa(:new.search_clob,:new.c024);
    wa(:new.search_clob,:new.c025);wa(:new.search_clob,:new.c026);wa(:new.search_clob,:new.c027);
    wa(:new.search_clob,:new.c028);wa(:new.search_clob,:new.c029);wa(:new.search_clob,:new.c030);
    wa(:new.search_clob,:new.c031);wa(:new.search_clob,:new.c032);wa(:new.search_clob,:new.c033);
    wa(:new.search_clob,:new.c034);wa(:new.search_clob,:new.c035);wa(:new.search_clob,:new.c036);
    wa(:new.search_clob,:new.c037);wa(:new.search_clob,:new.c038);wa(:new.search_clob,:new.c039);
    wa(:new.search_clob,:new.c040);wa(:new.search_clob,:new.c041);wa(:new.search_clob,:new.c042);
    wa(:new.search_clob,:new.c043);wa(:new.search_clob,:new.c044);wa(:new.search_clob,:new.c045);
    wa(:new.search_clob,:new.c046);wa(:new.search_clob,:new.c047);wa(:new.search_clob,:new.c048);
    wa(:new.search_clob,:new.c049);wa(:new.search_clob,:new.c050);
    --
    -- history
    --
    if updating then
       -- initialize column label array
       for i in 1..50
       loop
           la_col_label('C'||to_char(i,'FM009')) := null;
           la_col_label('N'||to_char(i,'FM009')) := null;
           la_col_label('D'||to_char(i,'FM009')) := null;
       end loop;
       -- get column label array
       for c1 in (select column_alias, report_label 
                  from apex_ws_data_grid_col
                  where data_grid_id = :new.data_grid_id)
       loop
           la_col_label(c1.column_alias) := c1.report_label;
       end loop;
       -- strings
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C001'),'C',:old.c001,:new.c001);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C002'),'C',:old.c002,:new.c002);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C003'),'C',:old.c003,:new.c003);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C004'),'C',:old.c004,:new.c004);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C005'),'C',:old.c005,:new.c005);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C006'),'C',:old.c006,:new.c006);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C007'),'C',:old.c007,:new.c007);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C008'),'C',:old.c008,:new.c008);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C009'),'C',:old.c009,:new.c009);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C010'),'C',:old.c010,:new.c010);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C011'),'C',:old.c011,:new.c011);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C012'),'C',:old.c012,:new.c012);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C013'),'C',:old.c013,:new.c013);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C014'),'C',:old.c014,:new.c014);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C015'),'C',:old.c015,:new.c015);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C016'),'C',:old.c016,:new.c016);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C017'),'C',:old.c017,:new.c017);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C018'),'C',:old.c018,:new.c018);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C019'),'C',:old.c019,:new.c019);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C020'),'C',:old.c020,:new.c020);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C021'),'C',:old.c021,:new.c021);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C022'),'C',:old.c022,:new.c022);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C023'),'C',:old.c023,:new.c023);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C024'),'C',:old.c024,:new.c024);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C025'),'C',:old.c025,:new.c025);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C026'),'C',:old.c026,:new.c026);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C027'),'C',:old.c027,:new.c027);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C028'),'C',:old.c028,:new.c028);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C029'),'C',:old.c029,:new.c029);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C030'),'C',:old.c030,:new.c030);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C031'),'C',:old.c031,:new.c031);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C032'),'C',:old.c032,:new.c032);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C033'),'C',:old.c033,:new.c033);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C034'),'C',:old.c034,:new.c034);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C035'),'C',:old.c035,:new.c035);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C036'),'C',:old.c036,:new.c036);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C037'),'C',:old.c037,:new.c037);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C038'),'C',:old.c038,:new.c038);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C039'),'C',:old.c039,:new.c039);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C040'),'C',:old.c040,:new.c040);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C041'),'C',:old.c041,:new.c041);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C042'),'C',:old.c042,:new.c042);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C043'),'C',:old.c043,:new.c043);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C044'),'C',:old.c044,:new.c044);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C045'),'C',:old.c045,:new.c045);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C046'),'C',:old.c046,:new.c046);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C047'),'C',:old.c047,:new.c047);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C048'),'C',:old.c048,:new.c048);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C049'),'C',:old.c049,:new.c049);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C050'),'C',:old.c050,:new.c050);
       -- numbers
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N001'),'N',null,null,null,null,:old.n001,:new.n001);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N002'),'N',null,null,null,null,:old.n002,:new.n002);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N003'),'N',null,null,null,null,:old.n003,:new.n003);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N004'),'N',null,null,null,null,:old.n004,:new.n004);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N005'),'N',null,null,null,null,:old.n005,:new.n005);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N006'),'N',null,null,null,null,:old.n006,:new.n006);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N007'),'N',null,null,null,null,:old.n007,:new.n007);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N008'),'N',null,null,null,null,:old.n008,:new.n008);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N009'),'N',null,null,null,null,:old.n009,:new.n009);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N010'),'N',null,null,null,null,:old.n010,:new.n010);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N011'),'N',null,null,null,null,:old.n011,:new.n011);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N012'),'N',null,null,null,null,:old.n012,:new.n012);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N013'),'N',null,null,null,null,:old.n013,:new.n013);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N014'),'N',null,null,null,null,:old.n014,:new.n014);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N015'),'N',null,null,null,null,:old.n015,:new.n015);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N016'),'N',null,null,null,null,:old.n016,:new.n016);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N017'),'N',null,null,null,null,:old.n017,:new.n017);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N018'),'N',null,null,null,null,:old.n018,:new.n018);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N019'),'N',null,null,null,null,:old.n019,:new.n019);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N020'),'N',null,null,null,null,:old.n020,:new.n020);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N021'),'N',null,null,null,null,:old.n021,:new.n021);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N022'),'N',null,null,null,null,:old.n022,:new.n022);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N023'),'N',null,null,null,null,:old.n023,:new.n023);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N024'),'N',null,null,null,null,:old.n024,:new.n024);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N025'),'N',null,null,null,null,:old.n025,:new.n025);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N026'),'N',null,null,null,null,:old.n026,:new.n026);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N027'),'N',null,null,null,null,:old.n027,:new.n027);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N028'),'N',null,null,null,null,:old.n028,:new.n028);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N029'),'N',null,null,null,null,:old.n029,:new.n029);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N030'),'N',null,null,null,null,:old.n030,:new.n030);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N031'),'N',null,null,null,null,:old.n031,:new.n031);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N032'),'N',null,null,null,null,:old.n032,:new.n032);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N033'),'N',null,null,null,null,:old.n033,:new.n033);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N034'),'N',null,null,null,null,:old.n034,:new.n034);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N035'),'N',null,null,null,null,:old.n035,:new.n035);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N036'),'N',null,null,null,null,:old.n036,:new.n036);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N037'),'N',null,null,null,null,:old.n037,:new.n037);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N038'),'N',null,null,null,null,:old.n038,:new.n038);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N039'),'N',null,null,null,null,:old.n039,:new.n039);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N040'),'N',null,null,null,null,:old.n040,:new.n040);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N041'),'N',null,null,null,null,:old.n041,:new.n041);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N042'),'N',null,null,null,null,:old.n042,:new.n042);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N043'),'N',null,null,null,null,:old.n043,:new.n043);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N044'),'N',null,null,null,null,:old.n044,:new.n044);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N045'),'N',null,null,null,null,:old.n045,:new.n045);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N046'),'N',null,null,null,null,:old.n046,:new.n046);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N047'),'N',null,null,null,null,:old.n047,:new.n047);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N048'),'N',null,null,null,null,:old.n048,:new.n048);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N049'),'N',null,null,null,null,:old.n049,:new.n049);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N050'),'N',null,null,null,null,:old.n050,:new.n050);
       -- dates
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D001'),'D',null,null,:old.d001,:new.d001);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D002'),'D',null,null,:old.d002,:new.d002);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D003'),'D',null,null,:old.d003,:new.d003);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D004'),'D',null,null,:old.d004,:new.d004);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D005'),'D',null,null,:old.d005,:new.d005);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D006'),'D',null,null,:old.d006,:new.d006);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D007'),'D',null,null,:old.d007,:new.d007);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D008'),'D',null,null,:old.d008,:new.d008);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D009'),'D',null,null,:old.d009,:new.d009);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D010'),'D',null,null,:old.d010,:new.d010);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D011'),'D',null,null,:old.d011,:new.d011);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D012'),'D',null,null,:old.d012,:new.d012);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D013'),'D',null,null,:old.d013,:new.d013);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D014'),'D',null,null,:old.d014,:new.d014);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D015'),'D',null,null,:old.d015,:new.d015);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D016'),'D',null,null,:old.d016,:new.d016);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D017'),'D',null,null,:old.d017,:new.d017);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D018'),'D',null,null,:old.d018,:new.d018);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D019'),'D',null,null,:old.d019,:new.d019);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D020'),'D',null,null,:old.d020,:new.d020);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D021'),'D',null,null,:old.d021,:new.d021);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D022'),'D',null,null,:old.d022,:new.d022);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D023'),'D',null,null,:old.d023,:new.d023);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D024'),'D',null,null,:old.d024,:new.d024);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D025'),'D',null,null,:old.d025,:new.d025);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D026'),'D',null,null,:old.d026,:new.d026);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D027'),'D',null,null,:old.d027,:new.d027);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D028'),'D',null,null,:old.d028,:new.d028);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D029'),'D',null,null,:old.d029,:new.d029);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D030'),'D',null,null,:old.d030,:new.d030);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D031'),'D',null,null,:old.d031,:new.d031);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D032'),'D',null,null,:old.d032,:new.d032);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D033'),'D',null,null,:old.d033,:new.d033);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D034'),'D',null,null,:old.d034,:new.d034);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D035'),'D',null,null,:old.d035,:new.d035);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D036'),'D',null,null,:old.d036,:new.d036);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D037'),'D',null,null,:old.d037,:new.d037);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D038'),'D',null,null,:old.d038,:new.d038);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D039'),'D',null,null,:old.d039,:new.d039);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D040'),'D',null,null,:old.d040,:new.d040);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D041'),'D',null,null,:old.d041,:new.d041);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D042'),'D',null,null,:old.d042,:new.d042);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D043'),'D',null,null,:old.d043,:new.d043);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D044'),'D',null,null,:old.d044,:new.d044);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D045'),'D',null,null,:old.d045,:new.d045);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D046'),'D',null,null,:old.d046,:new.d046);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D047'),'D',null,null,:old.d047,:new.d047);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D048'),'D',null,null,:old.d048,:new.d048);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D049'),'D',null,null,:old.d049,:new.d049);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D050'),'D',null,null,:old.d050,:new.d050);
    end if;
    --
    -- set owner
    --
    if :new.owner is null then
        :new.owner := :new.created_by;
    end if;
end;

/
ALTER TRIGGER "XE"."APEX$_WS_ROWS_T1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger APEX$_WS_TAGS_T1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "XE"."APEX$_WS_TAGS_T1" 
before insert or update on "APEX$_WS_TAGS"
for each row
begin
    --
    -- maintain pk and timestamps
    --
    if inserting and :new.id is null then
        select to_number(sys_guid(),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') into :new.id from dual;
    end if;
    if inserting then
        :new.created_on := sysdate;
        :new.created_by := nvl(v('APP_USER'),user);
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
    elsif updating then
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
    end if;
end;
/
ALTER TRIGGER "XE"."APEX$_WS_TAGS_T1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger APEX$_WS_WEBPG_SECTIONS_T1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "XE"."APEX$_WS_WEBPG_SECTIONS_T1" 
before insert or update on "APEX$_WS_WEBPG_SECTIONS"
for each row
declare
    l_sequence_changed varchar2(1) := 'N';
    l_title_changed varchar2(1) := 'N';
    l_content_changed varchar2(1) := 'N';
    procedure clob_upper( p_content in clob, p_content_upper in out nocopy clob)
    is
    l_buf varchar2(32767);
    l_off number;
    l_amt number;
    begin
    if p_content is not null then
        l_amt := 8000;
        l_off := 1;
         dbms_lob.trim( p_content_upper, 0);
         begin
             loop
                 dbms_lob.read( p_content, l_amt, l_off, l_buf );
                 l_buf := upper( l_buf );
                 dbms_lob.writeappend( p_content_upper, length(l_buf), l_buf);
                 l_off := l_off + l_amt;
                 l_amt := 8000;
             end loop;
         exception
             when no_data_found then null;
         end;
     end if;
end clob_upper;
begin
    --
    -- maintain pk and timestamps
    --
    if inserting and :new.id is null then
        select to_number(sys_guid(),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') into :new.id from dual;
    end if;
    if :new.section_type = 'NAV_PAGE' then
        if :new.nav_include_link is null then
            :new.nav_include_link := 'Y';
        end if;
    end if;
    if inserting and :new.content is not null then
        dbms_lob.createtemporary( :new.content_upper, false, dbms_lob.call );
        clob_upper( :new.content, :new.content_upper );
    elsif updating then
        if :new.content_upper is null then
            dbms_lob.createtemporary( :new.content_upper, false, dbms_lob.call );
        end if;
        clob_upper( :new.content, :new.content_upper );
    end if;
    if inserting then
        :new.created_on := sysdate;
        :new.created_by := nvl(v('APP_USER'),user);
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
    elsif updating then
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
        if nvl(:old.display_sequence,-999) != nvl(:new.display_sequence,-999) then
            l_sequence_changed := 'Y';
        end if;
        if nvl(:old.title,'jKKwZk') != nvl(:new.title,'jKKwZk') then
            l_title_changed := 'Y';
        end if;
        if dbms_lob.compare(:new.content,:old.content) != 0 or nvl(length(:new.content),0) != nvl(length(:old.content),0) then
            l_content_changed := 'Y';
        end if;
        if l_sequence_changed = 'Y' or l_title_changed = 'Y' or l_content_changed = 'Y' then
            insert into apex$_ws_webpg_section_history (section_id, ws_app_id, webpage_id, old_display_sequence, new_display_sequence,
            old_title, new_title, old_content, new_content, change_date, application_user_id)
            values (:new.id, :new.ws_app_id, :new.webpage_id,
                    decode(l_sequence_changed,'Y',:old.display_sequence,null), decode(l_sequence_changed,'Y',:new.display_sequence,null),
                    decode(l_title_changed,'Y',:old.title,null), decode(l_title_changed,'Y',:new.title,null),
                    decode(l_content_changed,'Y',:old.content,null), decode(l_content_changed,'Y',:new.content,null), sysdate, v('APP_USER'));
        end if;
    end if;
end;
/
ALTER TRIGGER "XE"."APEX$_WS_WEBPG_SECTIONS_T1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger BI_DEMO_USERS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "XE"."BI_DEMO_USERS" 
BEFORE
insert on "DEMO_USERS"
for each row
begin
begin
  for c1 in (
    select DEMO_USERS_SEQ.nextval next_val
    from dual
  ) loop
    :new.USER_ID :=  c1.next_val;
    :new.admin_user := 'N';
    :new.created_on := sysdate;
  end loop;
end;
end;
/
ALTER TRIGGER "XE"."BI_DEMO_USERS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DEMO_ORDER_ITEMS_GET_PRICE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "XE"."DEMO_ORDER_ITEMS_GET_PRICE" 
before insert or update on demo_order_items for each row
declare
  l_list_price number;
begin
-- First, we need to get the current list price of the order line item
select list_price into l_list_price from demo_product_info
  where product_id = :new.product_id;

-- Once we have the correct price, we will update the order line with the correct price
:new.unit_price := l_list_price;

end;
/
ALTER TRIGGER "XE"."DEMO_ORDER_ITEMS_GET_PRICE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DEMO_USERS_T1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "XE"."DEMO_USERS_T1" 
BEFORE
insert or update on "DEMO_USERS"
for each row
begin
:NEW.user_name := upper(:NEW.user_name);
end;
/
ALTER TRIGGER "XE"."DEMO_USERS_T1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger INSERT_DEMO_CUST
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "XE"."INSERT_DEMO_CUST" 
BEFORE INSERT ON demo_customers
FOR EACH ROW
DECLARE
  cust_id number;
BEGIN
  SELECT demo_cust_seq.nextval
    INTO cust_id
    FROM dual;
  :new.CUSTOMER_ID := cust_id;
END;
/
ALTER TRIGGER "XE"."INSERT_DEMO_CUST" ENABLE;
--------------------------------------------------------
--  DDL for Trigger INSERT_DEMO_ORDER_ITEMS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "XE"."INSERT_DEMO_ORDER_ITEMS" 
BEFORE
insert on "DEMO_ORDER_ITEMS"
for each row
begin
declare
  order_item_id number;
begin
select demo_order_items_seq.nextval into order_item_id from dual;
:new.ORDER_ITEM_ID := order_item_id;
end;
end;
/
ALTER TRIGGER "XE"."INSERT_DEMO_ORDER_ITEMS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger INSERT_DEMO_PROD
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "XE"."INSERT_DEMO_PROD" 
BEFORE INSERT ON demo_product_info
FOR EACH ROW
DECLARE
  prod_id number;
BEGIN
  SELECT demo_prod_seq.nextval
    INTO prod_id
    FROM dual;
  :new.PRODUCT_ID := prod_id;
END;
/
ALTER TRIGGER "XE"."INSERT_DEMO_PROD" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UPDATE_ORDER_TOTAL
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "XE"."UPDATE_ORDER_TOTAL" 
after insert or update or delete on demo_order_items
begin

-- Update the Order Total when any order item is changed

update demo_orders set order_total =
  (select sum(unit_price*quantity) from demo_order_items
    where demo_order_items.order_id = demo_orders.order_id);
end;
/
ALTER TRIGGER "XE"."UPDATE_ORDER_TOTAL" ENABLE;
--------------------------------------------------------
--  DDL for Procedure SP_DUMMY_INSERT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "XE"."SP_DUMMY_INSERT" AS 
BEGIN
-- 1부터 100까지 게시물 반복(loop) 등록하는 프로시저
-- MySql에 AI 역할을 SEQ_BNO.nextval
  FOR i IN 1..100 LOOP
        INSERT INTO TBL_BOARD(bno, title, content, writer) VALUES(SEQ_BNO.nextval, '게시물 제목', '게시물 내용', '관리자');
      END LOOP;
      --실행은 call sp_dummy_insert();
      COMMIT;
END SP_DUMMY_INSERT;

/
--------------------------------------------------------
--  DDL for Procedure SP_MYPAGE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "XE"."SP_MYPAGE" (
P_USER_ID IN VARCHAR2,
P_RESULT OUT SYS_REFCURSOR
) AS 
BEGIN
-- 매개변수로 회원아이디를 PARAMETER로 받아서 SELECT 조건에 회원 아이디와 일치하는 정보출력
-- 출력변수 CURSOR를 사용.
    OPEN P_RESULT FOR
        SELECT * FROM tbl_member WHERE user_id = P_USER_ID;
END SP_MYPAGE;

/
--------------------------------------------------------
--  DDL for Function CUSTOM_AUTH
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "XE"."CUSTOM_AUTH" (p_username in VARCHAR2, p_password in VARCHAR2)
return BOOLEAN
is
  l_password varchar2(4000);
  l_stored_password varchar2(4000);
  l_expires_on date;
  l_count number;
begin
-- First, check to see if the user is in the user table
select count(*) into l_count from demo_users where user_name = p_username;
if l_count > 0 then
  -- First, we fetch the stored hashed password & expire date
  select password, expires_on into l_stored_password, l_expires_on
   from demo_users where user_name = p_username;

  -- Next, we check to see if the user's account is expired
  -- If it is, return FALSE
  if l_expires_on > sysdate or l_expires_on is null then

    -- If the account is not expired, we have to apply the custom hash
    -- function to the password
    l_password := custom_hash(p_username, p_password);

    -- Finally, we compare them to see if they are the same and return
    -- either TRUE or FALSE
    if l_password = l_stored_password then
      return true;
    else
      return false;
    end if;
  else
    return false;
  end if;
else
  -- The username provided is not in the DEMO_USERS table
  return false;
end if;
end;

/
--------------------------------------------------------
--  DDL for Function CUSTOM_HASH
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "XE"."CUSTOM_HASH" (p_username in varchar2, p_password in varchar2)
return varchar2
is
  l_password varchar2(4000);
  l_salt varchar2(4000) := 'BP8OJ7ZXYS0VWWVKF5DDBY6CAJBVJA';
begin

-- This function should be wrapped, as the hash algorhythm is exposed here.
-- You can change the value of l_salt or the method of which to call the
-- DBMS_OBFUSCATOIN toolkit, but you much reset all of your passwords
-- if you choose to do this.

l_password := utl_raw.cast_to_raw(dbms_obfuscation_toolkit.md5
  (input_string => p_password || substr(l_salt,10,13) || p_username ||
    substr(l_salt, 4,10)));
return l_password;
end;

/
--------------------------------------------------------
--  DDL for Function FN_REPLY_CNT
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "XE"."FN_REPLY_CNT" 
(
  P_BNO IN NUMBER 
) RETURN NUMBER AS 
-- 게시물에 대한 댓글 카운트 구하기
-- 매개변수 게시물번호 P_BNO 받아서 출력은 숫자로 표시
V_REPLY_CNT number:=0;
BEGIN
    SELECT COUNT(*) INTO V_REPLY_CNT FROM TBL_REPLY WHERE bno = P_BNO;
    RETURN v_REPLY_CNT;
END FN_REPLY_CNT;

/
--------------------------------------------------------
--  Constraints for Table APEX$_ACL
--------------------------------------------------------

  ALTER TABLE "XE"."APEX$_ACL" ADD CONSTRAINT "APEX$_ACL_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "XE"."APEX$_ACL" ADD CONSTRAINT "APEX$_ACL_PRIV_CK" CHECK (priv in ('R','C','A')) ENABLE;
  ALTER TABLE "XE"."APEX$_ACL" MODIFY ("CREATED_BY" NOT NULL ENABLE);
  ALTER TABLE "XE"."APEX$_ACL" MODIFY ("CREATED_ON" NOT NULL ENABLE);
  ALTER TABLE "XE"."APEX$_ACL" MODIFY ("PRIV" NOT NULL ENABLE);
  ALTER TABLE "XE"."APEX$_ACL" MODIFY ("USERNAME" NOT NULL ENABLE);
  ALTER TABLE "XE"."APEX$_ACL" MODIFY ("WS_APP_ID" NOT NULL ENABLE);
  ALTER TABLE "XE"."APEX$_ACL" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table APEX$_WS_FILES
--------------------------------------------------------

  ALTER TABLE "XE"."APEX$_WS_FILES" ADD CONSTRAINT "APEX$_WS_FILES_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "XE"."APEX$_WS_FILES" ADD CONSTRAINT "APEX$_WS_FILES_CL_CK" CHECK (component_level in ('WEBSHEET','ROW','WORKSPACE','WEBPAGE')) ENABLE;
  ALTER TABLE "XE"."APEX$_WS_FILES" MODIFY ("CREATED_BY" NOT NULL ENABLE);
  ALTER TABLE "XE"."APEX$_WS_FILES" MODIFY ("CREATED_ON" NOT NULL ENABLE);
  ALTER TABLE "XE"."APEX$_WS_FILES" MODIFY ("MIME_TYPE" NOT NULL ENABLE);
  ALTER TABLE "XE"."APEX$_WS_FILES" MODIFY ("NAME" NOT NULL ENABLE);
  ALTER TABLE "XE"."APEX$_WS_FILES" MODIFY ("WS_APP_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table APEX$_WS_HISTORY
--------------------------------------------------------

  ALTER TABLE "XE"."APEX$_WS_HISTORY" MODIFY ("DATA_GRID_ID" NOT NULL ENABLE);
  ALTER TABLE "XE"."APEX$_WS_HISTORY" MODIFY ("WS_APP_ID" NOT NULL ENABLE);
  ALTER TABLE "XE"."APEX$_WS_HISTORY" MODIFY ("ROW_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table APEX$_WS_LINKS
--------------------------------------------------------

  ALTER TABLE "XE"."APEX$_WS_LINKS" ADD CONSTRAINT "APEX$_WS_LINKS_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "XE"."APEX$_WS_LINKS" ADD CONSTRAINT "APEX$_WS_LINKS_SH_CK" CHECK (show_on_homepage in ('Y','N')) ENABLE;
  ALTER TABLE "XE"."APEX$_WS_LINKS" ADD CONSTRAINT "APEX$_WS_LINKS_CL_CK" CHECK (component_level in ('WEBSHEET','ROW','WORKSPACE','WEBPAGE')) ENABLE;
  ALTER TABLE "XE"."APEX$_WS_LINKS" MODIFY ("CREATED_BY" NOT NULL ENABLE);
  ALTER TABLE "XE"."APEX$_WS_LINKS" MODIFY ("CREATED_ON" NOT NULL ENABLE);
  ALTER TABLE "XE"."APEX$_WS_LINKS" MODIFY ("URL" NOT NULL ENABLE);
  ALTER TABLE "XE"."APEX$_WS_LINKS" MODIFY ("LINK_NAME" NOT NULL ENABLE);
  ALTER TABLE "XE"."APEX$_WS_LINKS" MODIFY ("WS_APP_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table APEX$_WS_NOTES
--------------------------------------------------------

  ALTER TABLE "XE"."APEX$_WS_NOTES" ADD CONSTRAINT "APEX$_WS_NOTES_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "XE"."APEX$_WS_NOTES" ADD CONSTRAINT "APEX$_WS_NOTES_CL_CK" CHECK (component_level in ('WEBSHEET','ROW','WORKSPACE','WEBPAGE')) ENABLE;
  ALTER TABLE "XE"."APEX$_WS_NOTES" MODIFY ("CREATED_BY" NOT NULL ENABLE);
  ALTER TABLE "XE"."APEX$_WS_NOTES" MODIFY ("CREATED_ON" NOT NULL ENABLE);
  ALTER TABLE "XE"."APEX$_WS_NOTES" MODIFY ("WS_APP_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table APEX$_WS_ROWS
--------------------------------------------------------

  ALTER TABLE "XE"."APEX$_WS_ROWS" ADD CONSTRAINT "APEX$_WS_ROWS_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "XE"."APEX$_WS_ROWS" MODIFY ("CREATED_BY" NOT NULL ENABLE);
  ALTER TABLE "XE"."APEX$_WS_ROWS" MODIFY ("CREATED_ON" NOT NULL ENABLE);
  ALTER TABLE "XE"."APEX$_WS_ROWS" MODIFY ("DATA_GRID_ID" NOT NULL ENABLE);
  ALTER TABLE "XE"."APEX$_WS_ROWS" MODIFY ("WS_APP_ID" NOT NULL ENABLE);
  ALTER TABLE "XE"."APEX$_WS_ROWS" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table APEX$_WS_TAGS
--------------------------------------------------------

  ALTER TABLE "XE"."APEX$_WS_TAGS" ADD CONSTRAINT "APEX$_WS_TAGS_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "XE"."APEX$_WS_TAGS" ADD CONSTRAINT "APEX$_WS_TAGS_CL_CK" CHECK (component_level in ('WEBSHEET','ROW','WORKSPACE','WEBPAGE')) ENABLE;
  ALTER TABLE "XE"."APEX$_WS_TAGS" MODIFY ("CREATED_BY" NOT NULL ENABLE);
  ALTER TABLE "XE"."APEX$_WS_TAGS" MODIFY ("CREATED_ON" NOT NULL ENABLE);
  ALTER TABLE "XE"."APEX$_WS_TAGS" MODIFY ("WS_APP_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table APEX$_WS_WEBPG_SECTIONS
--------------------------------------------------------

  ALTER TABLE "XE"."APEX$_WS_WEBPG_SECTIONS" ADD CONSTRAINT "APEX$_WS_WEBPG_SECTIONS_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "XE"."APEX$_WS_WEBPG_SECTIONS" ADD CONSTRAINT "APEX$_WS_WEBPG_SECTION_3D_CK" CHECK (chart_3d in ('Y','N')) ENABLE;
  ALTER TABLE "XE"."APEX$_WS_WEBPG_SECTIONS" ADD CONSTRAINT "APEX$_WS_WEBPG_SECTION_LINK_CK" CHECK (nav_include_link in ('Y','N')) ENABLE;
  ALTER TABLE "XE"."APEX$_WS_WEBPG_SECTIONS" ADD CONSTRAINT "APEX$_WS_WEBPG_SECTION_TYPE_CK" CHECK (section_type in ('TEXT','DATA','CHART','NAV_PAGE','NAV_SECTION')) ENABLE;
  ALTER TABLE "XE"."APEX$_WS_WEBPG_SECTIONS" MODIFY ("CREATED_BY" NOT NULL ENABLE);
  ALTER TABLE "XE"."APEX$_WS_WEBPG_SECTIONS" MODIFY ("CREATED_ON" NOT NULL ENABLE);
  ALTER TABLE "XE"."APEX$_WS_WEBPG_SECTIONS" MODIFY ("SECTION_TYPE" NOT NULL ENABLE);
  ALTER TABLE "XE"."APEX$_WS_WEBPG_SECTIONS" MODIFY ("WS_APP_ID" NOT NULL ENABLE);
  ALTER TABLE "XE"."APEX$_WS_WEBPG_SECTIONS" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table APEX$_WS_WEBPG_SECTION_HISTORY
--------------------------------------------------------

  ALTER TABLE "XE"."APEX$_WS_WEBPG_SECTION_HISTORY" MODIFY ("CHANGE_DATE" NOT NULL ENABLE);
  ALTER TABLE "XE"."APEX$_WS_WEBPG_SECTION_HISTORY" MODIFY ("APPLICATION_USER_ID" NOT NULL ENABLE);
  ALTER TABLE "XE"."APEX$_WS_WEBPG_SECTION_HISTORY" MODIFY ("WEBPAGE_ID" NOT NULL ENABLE);
  ALTER TABLE "XE"."APEX$_WS_WEBPG_SECTION_HISTORY" MODIFY ("WS_APP_ID" NOT NULL ENABLE);
  ALTER TABLE "XE"."APEX$_WS_WEBPG_SECTION_HISTORY" MODIFY ("SECTION_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DEMO_CUSTOMERS
--------------------------------------------------------

  ALTER TABLE "XE"."DEMO_CUSTOMERS" ADD CONSTRAINT "DEMO_CUSTOMERS_PK" PRIMARY KEY ("CUSTOMER_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "XE"."DEMO_CUSTOMERS" ADD CONSTRAINT "DEMO_CUST_CREDIT_LIMIT_MAX" CHECK (credit_limit <= 5000) ENABLE;
  ALTER TABLE "XE"."DEMO_CUSTOMERS" MODIFY ("CUST_LAST_NAME" NOT NULL ENABLE);
  ALTER TABLE "XE"."DEMO_CUSTOMERS" MODIFY ("CUST_FIRST_NAME" NOT NULL ENABLE);
  ALTER TABLE "XE"."DEMO_CUSTOMERS" MODIFY ("CUSTOMER_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DEMO_ORDERS
--------------------------------------------------------

  ALTER TABLE "XE"."DEMO_ORDERS" ADD CONSTRAINT "DEMO_ORDER_PK" PRIMARY KEY ("ORDER_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "XE"."DEMO_ORDERS" ADD CONSTRAINT "DEMO_ORDER_TOTAL_MIN" CHECK (order_total >= 0) ENABLE;
  ALTER TABLE "XE"."DEMO_ORDERS" MODIFY ("CUSTOMER_ID" NOT NULL ENABLE);
  ALTER TABLE "XE"."DEMO_ORDERS" MODIFY ("ORDER_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DEMO_ORDER_ITEMS
--------------------------------------------------------

  ALTER TABLE "XE"."DEMO_ORDER_ITEMS" ADD CONSTRAINT "DEMO_ORDER_ITEMS_PK" PRIMARY KEY ("ORDER_ITEM_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "XE"."DEMO_ORDER_ITEMS" MODIFY ("QUANTITY" NOT NULL ENABLE);
  ALTER TABLE "XE"."DEMO_ORDER_ITEMS" MODIFY ("UNIT_PRICE" NOT NULL ENABLE);
  ALTER TABLE "XE"."DEMO_ORDER_ITEMS" MODIFY ("PRODUCT_ID" NOT NULL ENABLE);
  ALTER TABLE "XE"."DEMO_ORDER_ITEMS" MODIFY ("ORDER_ID" NOT NULL ENABLE);
  ALTER TABLE "XE"."DEMO_ORDER_ITEMS" MODIFY ("ORDER_ITEM_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DEMO_PRODUCT_INFO
--------------------------------------------------------

  ALTER TABLE "XE"."DEMO_PRODUCT_INFO" ADD CONSTRAINT "DEMO_PRODUCT_INFO_PK" PRIMARY KEY ("PRODUCT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "XE"."DEMO_PRODUCT_INFO" MODIFY ("PRODUCT_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DEMO_USERS
--------------------------------------------------------

  ALTER TABLE "XE"."DEMO_USERS" ADD CONSTRAINT "DEMO_USERS_PK" PRIMARY KEY ("USER_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DEPT
--------------------------------------------------------

  ALTER TABLE "XE"."DEPT" ADD PRIMARY KEY ("DEPTNO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table EMP
--------------------------------------------------------

  ALTER TABLE "XE"."EMP" ADD PRIMARY KEY ("EMPNO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "XE"."EMP" MODIFY ("EMPNO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table MEMBER
--------------------------------------------------------

  ALTER TABLE "XE"."MEMBER" ADD CONSTRAINT "MEMBERS_PK" PRIMARY KEY ("USERID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "XE"."MEMBER" MODIFY ("UPDATEDATE" NOT NULL ENABLE);
  ALTER TABLE "XE"."MEMBER" MODIFY ("REGDATE" NOT NULL ENABLE);
  ALTER TABLE "XE"."MEMBER" MODIFY ("USERNAME" NOT NULL ENABLE);
  ALTER TABLE "XE"."MEMBER" MODIFY ("USERPW" NOT NULL ENABLE);
  ALTER TABLE "XE"."MEMBER" MODIFY ("USERID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TBL_ATTACH
--------------------------------------------------------

  ALTER TABLE "XE"."TBL_ATTACH" ADD CONSTRAINT "ATTACH_PK" PRIMARY KEY ("FULL_NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "XE"."TBL_ATTACH" MODIFY ("BNO" NOT NULL ENABLE);
  ALTER TABLE "XE"."TBL_ATTACH" MODIFY ("FULL_NAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TBL_BOARD
--------------------------------------------------------

  ALTER TABLE "XE"."TBL_BOARD" ADD CONSTRAINT "BOARD_PK" PRIMARY KEY ("BNO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "XE"."TBL_BOARD" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
  ALTER TABLE "XE"."TBL_BOARD" MODIFY ("REGDATE" NOT NULL ENABLE);
  ALTER TABLE "XE"."TBL_BOARD" MODIFY ("WRITER" NOT NULL ENABLE);
  ALTER TABLE "XE"."TBL_BOARD" MODIFY ("TITLE" NOT NULL ENABLE);
  ALTER TABLE "XE"."TBL_BOARD" MODIFY ("BNO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TBL_BOARD_TYPE
--------------------------------------------------------

  ALTER TABLE "XE"."TBL_BOARD_TYPE" ADD CONSTRAINT "TBL_BOARD_TYPE_PK" PRIMARY KEY ("BOD_TYPE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "XE"."TBL_BOARD_TYPE" MODIFY ("BOD_TYPE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TBL_MEMBER
--------------------------------------------------------

  ALTER TABLE "XE"."TBL_MEMBER" ADD CONSTRAINT "MEMBER_PK" PRIMARY KEY ("USER_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "XE"."TBL_MEMBER" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
  ALTER TABLE "XE"."TBL_MEMBER" MODIFY ("REG_DATE" NOT NULL ENABLE);
  ALTER TABLE "XE"."TBL_MEMBER" MODIFY ("LEVELS" NOT NULL ENABLE);
  ALTER TABLE "XE"."TBL_MEMBER" MODIFY ("ENABLED" NOT NULL ENABLE);
  ALTER TABLE "XE"."TBL_MEMBER" MODIFY ("POINT" NOT NULL ENABLE);
  ALTER TABLE "XE"."TBL_MEMBER" MODIFY ("USER_NAME" NOT NULL ENABLE);
  ALTER TABLE "XE"."TBL_MEMBER" MODIFY ("USER_PW" NOT NULL ENABLE);
  ALTER TABLE "XE"."TBL_MEMBER" MODIFY ("USER_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TBL_REPLY
--------------------------------------------------------

  ALTER TABLE "XE"."TBL_REPLY" ADD CONSTRAINT "REPLY_PK" PRIMARY KEY ("RNO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "XE"."TBL_REPLY" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
  ALTER TABLE "XE"."TBL_REPLY" MODIFY ("REGDATE" NOT NULL ENABLE);
  ALTER TABLE "XE"."TBL_REPLY" MODIFY ("REPLYER" NOT NULL ENABLE);
  ALTER TABLE "XE"."TBL_REPLY" MODIFY ("REPLYTEXT" NOT NULL ENABLE);
  ALTER TABLE "XE"."TBL_REPLY" MODIFY ("BNO" NOT NULL ENABLE);
  ALTER TABLE "XE"."TBL_REPLY" MODIFY ("RNO" NOT NULL ENABLE);
--------------------------------------------------------
--  Ref Constraints for Table APEX$_WS_FILES
--------------------------------------------------------

  ALTER TABLE "XE"."APEX$_WS_FILES" ADD CONSTRAINT "APEX$_WS_FILES_FK" FOREIGN KEY ("ROW_ID")
	  REFERENCES "XE"."APEX$_WS_ROWS" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table APEX$_WS_LINKS
--------------------------------------------------------

  ALTER TABLE "XE"."APEX$_WS_LINKS" ADD CONSTRAINT "APEX$_WS_LINKS_FK" FOREIGN KEY ("ROW_ID")
	  REFERENCES "XE"."APEX$_WS_ROWS" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table APEX$_WS_NOTES
--------------------------------------------------------

  ALTER TABLE "XE"."APEX$_WS_NOTES" ADD CONSTRAINT "APEX$_WS_NOTES_FK" FOREIGN KEY ("ROW_ID")
	  REFERENCES "XE"."APEX$_WS_ROWS" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table APEX$_WS_TAGS
--------------------------------------------------------

  ALTER TABLE "XE"."APEX$_WS_TAGS" ADD CONSTRAINT "APEX$_WS_TAGS_FK" FOREIGN KEY ("ROW_ID")
	  REFERENCES "XE"."APEX$_WS_ROWS" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DEMO_ORDERS
--------------------------------------------------------

  ALTER TABLE "XE"."DEMO_ORDERS" ADD CONSTRAINT "DEMO_ORDERS_CUSTOMER_ID_FK" FOREIGN KEY ("CUSTOMER_ID")
	  REFERENCES "XE"."DEMO_CUSTOMERS" ("CUSTOMER_ID") ENABLE;
  ALTER TABLE "XE"."DEMO_ORDERS" ADD CONSTRAINT "DEMO_ORDERS_USER_ID_FK" FOREIGN KEY ("USER_ID")
	  REFERENCES "XE"."DEMO_USERS" ("USER_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DEMO_ORDER_ITEMS
--------------------------------------------------------

  ALTER TABLE "XE"."DEMO_ORDER_ITEMS" ADD CONSTRAINT "DEMO_ORDER_ITEMS_FK" FOREIGN KEY ("ORDER_ID")
	  REFERENCES "XE"."DEMO_ORDERS" ("ORDER_ID") ON DELETE CASCADE ENABLE;
  ALTER TABLE "XE"."DEMO_ORDER_ITEMS" ADD CONSTRAINT "DEMO_ORDER_ITEMS_PRODUCT_ID_FK" FOREIGN KEY ("PRODUCT_ID")
	  REFERENCES "XE"."DEMO_PRODUCT_INFO" ("PRODUCT_ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table EMP
--------------------------------------------------------

  ALTER TABLE "XE"."EMP" ADD FOREIGN KEY ("MGR")
	  REFERENCES "XE"."EMP" ("EMPNO") ENABLE;
  ALTER TABLE "XE"."EMP" ADD FOREIGN KEY ("DEPTNO")
	  REFERENCES "XE"."DEPT" ("DEPTNO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table TBL_ATTACH
--------------------------------------------------------

  ALTER TABLE "XE"."TBL_ATTACH" ADD CONSTRAINT "FK_BOARD_ATTACH" FOREIGN KEY ("BNO")
	  REFERENCES "XE"."TBL_BOARD" ("BNO") ON DELETE CASCADE DISABLE;
--------------------------------------------------------
--  Ref Constraints for Table TBL_REPLY
--------------------------------------------------------

  ALTER TABLE "XE"."TBL_REPLY" ADD CONSTRAINT "FK_BOARD" FOREIGN KEY ("BNO")
	  REFERENCES "XE"."TBL_BOARD" ("BNO") ON DELETE CASCADE DISABLE;
